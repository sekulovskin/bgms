[{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/articles/comparison.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Model Comparison with bgmCompare","text":"function bgmCompare() extends bgm() independent-sample designs. estimates whether edge weights category thresholds differ across groups ordinal Markov random field (MRF). Posterior inclusion probabilities indicate plausible group difference exists given parameter. can converted Bayes factors hypothesis testing.","code":""},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/articles/comparison.html","id":"boredom-dataset","dir":"Articles","previous_headings":"","what":"Boredom dataset","title":"Model Comparison with bgmCompare","text":"illustrate subset Boredom dataset included bgms.","code":"library(bgms)  ?Boredom data_french = Boredom[Boredom$language == \"fr\", -1] data_french = data_french[, 1:5] data_english = Boredom[Boredom$language != \"fr\", -1] data_english = data_english[, 1:5]"},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/articles/comparison.html","id":"fitting-a-model","dir":"Articles","previous_headings":"","what":"Fitting a model","title":"Model Comparison with bgmCompare","text":"Note: fitting, progress bars shown interactive sessions. vignette, suppressed clarity. Sampling can take ; progress bars usually help track progress.","code":"fit = bgmCompare(x = data_french, y = data_english, seed = 1234) #> Note: 0.03% of transitions hit the maximum tree depth (1 of 4000). #> Check efficiency metrics such as effective sample size (ESS) to ensure #> sufficient exploration of the posterior."},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/articles/comparison.html","id":"posterior-summaries","dir":"Articles","previous_headings":"","what":"Posterior summaries","title":"Model Comparison with bgmCompare","text":"summary shows baseline effects group differences: can extract posterior means inclusion probabilities:","code":"summary(fit) #> Posterior summaries from Bayesian grouped MRF estimation (bgmCompare): #>  #> Category thresholds: #>        parameter    mean  mcse    sd    n_eff  Rhat #> 1 loose_ends (1)  -0.934 0.002 0.092 2939.560 1.000 #> 2 loose_ends (2)  -2.516 0.003 0.138 2009.632 1.000 #> 3 loose_ends (3)  -3.798 0.005 0.183 1472.187 1.001 #> 4 loose_ends (4)  -5.086 0.007 0.243 1209.406 1.001 #> 5 loose_ends (5)  -7.619 0.010 0.339 1225.410 1.001 #> 6 loose_ends (6) -10.122 0.013 0.443 1167.515 1.003 #> ... (use `summary(fit)$main` to see full output) #>  #> Pairwise interactions: #>                parameter  mean mcse    sd    n_eff  Rhat #> 1   loose_ends-entertain 0.170    0 0.013 2416.617 1.001 #> 2  loose_ends-repetitive 0.058    0 0.012 2535.982 1.001 #> 3 loose_ends-stimulation 0.127    0 0.012 2662.356 1.000 #> 4   loose_ends-motivated 0.141    0 0.013 2751.730 1.002 #> 5   entertain-repetitive 0.067    0 0.012 2132.079 1.000 #> 6  entertain-stimulation 0.109    0 0.012 2552.926 1.000 #> ... (use `summary(fit)$pairwise` to see full output) #>  #> Inclusion probabilities: #>                          parameter  mean    sd  mcse n0->0 n0->1 n1->0 #>                  loose_ends (main) 0.005 0.071 0.001  3964    15    15 #>    loose_ends-entertain (pairwise) 0.021 0.143 0.002  3835    81    81 #>   loose_ends-repetitive (pairwise) 0.504 0.500 0.019  1681   300   300 #>  loose_ends-stimulation (pairwise) 0.040 0.195 0.004  3712   129   130 #>    loose_ends-motivated (pairwise) 0.019 0.137 0.002  3851    72    72 #>                   entertain (main) 0.001 0.035 0.001  3991     3     3 #>  n1->1    n_eff  Rhat #>      5 2419.360 1.056 #>      2 3972.797 1.001 #>   1718  706.161 1.020 #>     28 2995.268 1.000 #>      4 3734.862 1.010 #>      2 1717.353 1.143 #> ... (use `summary(fit)$indicator` to see full output) #> Note: NA values are suppressed in the print table. They occur when an indicator #> was constant (all 0 or all 1) across all iterations, so sd/mcse/n_eff/Rhat #> are undefined; `summary(fit)$indicator` still contains the NA values. #>  #> Group differences (main effects): #>              parameter   mean    sd  mcse    n_eff  Rhat #>  loose_ends (diff1; 1)  0.000 0.001 0.000   20.011 1.000 #>  loose_ends (diff1; 2)  0.002 0.027 0.001 2130.188 1.000 #>  loose_ends (diff1; 3)  0.002 0.025 0.001 1930.111 1.000 #>  loose_ends (diff1; 4)  0.002 0.022 0.001 1416.941 1.000 #>  loose_ends (diff1; 5) -0.001 0.008 0.001  178.943 1.000 #>  loose_ends (diff1; 6) -0.003 0.042 0.001 1124.060 1.001 #> ... (use `summary(fit)$main_diff` to see full output) #> Note: NA values are suppressed in the print table. They occur here when an #> indicator was zero across all iterations, so mcse/n_eff/Rhat are undefined; #> `summary(fit)$main_diff` still contains the NA values. #>  #> Group differences (pairwise effects): #>                       parameter  mean    sd  mcse    n_eff  Rhat #>    loose_ends-entertain (diff1) 0.000 0.001 0.000  715.921 1.000 #>   loose_ends-repetitive (diff1) 0.022 0.023 0.001  747.297 1.014 #>  loose_ends-stimulation (diff1) 0.001 0.004 0.000 1978.955 1.000 #>    loose_ends-motivated (diff1) 0.000 0.002 0.000  856.399 1.000 #>    entertain-repetitive (diff1) 0.005 0.012 0.000 1280.913 1.004 #>   entertain-stimulation (diff1) 0.002 0.007 0.000 2693.501 1.002 #> ... (use `summary(fit)$pairwise_diff` to see full output) #> Note: NA values are suppressed in the print table. They occur here when an #> indicator was zero across all iterations, so mcse/n_eff/Rhat are undefined; #> `summary(fit)$pairwise_diff` still contains the NA values. #>  #> Use `summary(fit)$<component>` to access full results. #> See the `easybgm` package for other summary and plotting tools. coef(fit) #> $main_effects_raw #>                    baseline         diff1 #> loose_ends(c1)   -0.9335448  1.353684e-06 #> loose_ends(c2)   -2.5160671  1.913279e-03 #> loose_ends(c3)   -3.7981214  1.746971e-03 #> loose_ends(c4)   -5.0862036  1.586779e-03 #> loose_ends(c5)   -7.6186947 -5.641530e-04 #> loose_ends(c6)  -10.1215955 -2.948219e-03 #> entertain(c1)    -0.8672713 -3.238407e-04 #> entertain(c2)    -2.2442298 -6.052487e-06 #> entertain(c3)    -3.8125399  4.409582e-04 #> entertain(c4)    -5.1708255  1.934664e-04 #> entertain(c5)    -7.0439301  2.585494e-04 #> entertain(c6)    -9.5761797  8.500207e-04 #> repetitive(c1)   -0.1382395 -2.957967e-03 #> repetitive(c2)   -0.6596801 -5.081336e-03 #> repetitive(c3)   -1.0873176 -1.376381e-03 #> repetitive(c4)   -1.8655581  3.552845e-03 #> repetitive(c5)   -3.2533504  8.608963e-03 #> repetitive(c6)   -5.0346164  9.108386e-03 #> stimulation(c1)  -0.5471426 -3.479786e-03 #> stimulation(c2)  -1.7883340 -7.534717e-04 #> stimulation(c3)  -2.5339950 -1.188131e-03 #> stimulation(c4)  -3.6203067 -3.208995e-03 #> stimulation(c5)  -5.1021794 -2.096424e-03 #> stimulation(c6)  -7.0734306 -4.997347e-03 #> motivated(c1)    -0.5573760 -1.671857e-03 #> motivated(c2)    -1.8027889 -6.952556e-04 #> motivated(c3)    -3.2913727  6.448214e-04 #> motivated(c4)    -4.7841676  1.613263e-03 #> motivated(c5)    -6.7826610 -9.152204e-04 #> motivated(c6)    -9.1456487  1.709301e-03 #>  #> $pairwise_effects_raw #>                          baseline         diff1 #> loose_ends-entertain   0.16957126  0.0001678142 #> loose_ends-repetitive  0.05813207  0.0217766572 #> loose_ends-stimulation 0.12691674  0.0008670351 #> loose_ends-motivated   0.14100594 -0.0002092935 #> entertain-repetitive   0.06716624  0.0045123472 #> entertain-stimulation  0.10947097  0.0020177958 #> entertain-motivated    0.08596872  0.0043062073 #> repetitive-stimulation 0.05618111  0.0007279903 #> repetitive-motivated   0.13718742  0.0147375246 #> stimulation-motivated  0.10782364  0.0001179359 #>  #> $main_effects_groups #>                      group1      group2 #> loose_ends(c1)   -0.9335455  -0.9335442 #> loose_ends(c2)   -2.5170238  -2.5151105 #> loose_ends(c3)   -3.7989948  -3.7972479 #> loose_ends(c4)   -5.0869969  -5.0854102 #> loose_ends(c5)   -7.6184127  -7.6189768 #> loose_ends(c6)  -10.1201214 -10.1230696 #> entertain(c1)    -0.8671094  -0.8674332 #> entertain(c2)    -2.2442268  -2.2442328 #> entertain(c3)    -3.8127604  -3.8123194 #> entertain(c4)    -5.1709223  -5.1707288 #> entertain(c5)    -7.0440593  -7.0438008 #> entertain(c6)    -9.5766047  -9.5757547 #> repetitive(c1)   -0.1367605  -0.1397185 #> repetitive(c2)   -0.6571394  -0.6622207 #> repetitive(c3)   -1.0866294  -1.0880058 #> repetitive(c4)   -1.8673346  -1.8637817 #> repetitive(c5)   -3.2576549  -3.2490459 #> repetitive(c6)   -5.0391706  -5.0300622 #> stimulation(c1)  -0.5454027  -0.5488825 #> stimulation(c2)  -1.7879573  -1.7887108 #> stimulation(c3)  -2.5334009  -2.5345890 #> stimulation(c4)  -3.6187022  -3.6219112 #> stimulation(c5)  -5.1011311  -5.1032276 #> stimulation(c6)  -7.0709319  -7.0759292 #> motivated(c1)    -0.5565400  -0.5582119 #> motivated(c2)    -1.8024413  -1.8031365 #> motivated(c3)    -3.2916951  -3.2910503 #> motivated(c4)    -4.7849742  -4.7833609 #> motivated(c5)    -6.7822034  -6.7831186 #> motivated(c6)    -9.1465033  -9.1447940 #>  #> $pairwise_effects_groups #>                            group1     group2 #> loose_ends-entertain   0.16948735 0.16965516 #> loose_ends-repetitive  0.04724374 0.06902040 #> loose_ends-stimulation 0.12648323 0.12735026 #> loose_ends-motivated   0.14111059 0.14090130 #> entertain-repetitive   0.06491007 0.06942242 #> entertain-stimulation  0.10846207 0.11047987 #> entertain-motivated    0.08381561 0.08812182 #> repetitive-stimulation 0.05581711 0.05654510 #> repetitive-motivated   0.12981866 0.14455618 #> stimulation-motivated  0.10776467 0.10788261 #>  #> $indicators #>             loose_ends entertain repetitive stimulation motivated #> loose_ends     0.00500   0.02075    0.50450     0.03950   0.01900 #> entertain      0.02075   0.00125    0.13275     0.07450   0.12675 #> repetitive     0.50450   0.13275    0.01475     0.03425   0.36950 #> stimulation    0.03950   0.07450    0.03425     0.00650   0.01325 #> motivated      0.01900   0.12675    0.36950     0.01325   0.00575"},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/articles/comparison.html","id":"visualizing-group-networks","dir":"Articles","previous_headings":"","what":"Visualizing group networks","title":"Model Comparison with bgmCompare","text":"can use output plot network French sample:","code":"library(qgraph)  french_network = matrix(0, 5, 5) french_network[lower.tri(french_network)] = coef(fit)$pairwise_effects_groups[, 1] french_network = french_network + t(french_network) colnames(french_network) = colnames(data_french) rownames(french_network) = colnames(data_french)  qgraph(french_network,        theme = \"TeamFortress\",        maximum = 1,        fade = FALSE,        color = c(\"#f0ae0e\"), vsize = 10, repulsion = .9,        label.cex = 1, label.scale = \"FALSE\",        labels = colnames(data_french))"},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/articles/comparison.html","id":"next-steps","dir":"Articles","previous_headings":"","what":"Next steps","title":"Model Comparison with bgmCompare","text":"one-sample analysis, see Getting Started vignette. diagnostics convergence checks, see Diagnostics vignette. additional analysis tools advanced plotting options, consider using easybgm package, integrates smoothly bgms objects.","code":""},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/articles/diagnostics.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Diagnostics and Spike-and-Slab Summaries","text":"vignette illustrates inspect convergence diagnostics interpret spike--slab summaries bgms models. model variables spike--slab priors introduce binary indicator variables govern whether effect included . posterior distributions can summarized inclusion probabilities Bayes factors.","code":""},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/articles/diagnostics.html","id":"example-fit","dir":"Articles","previous_headings":"","what":"Example fit","title":"Diagnostics and Spike-and-Slab Summaries","text":"use subset Wenchuan dataset: Note: fitting, progress bars shown interactive sessions. vignette, suppressed clarity. Sampling can take ; progress bars usually help track progress.","code":"library(bgms)  ?Wenchuan data = Wenchuan[, 1:5] fit = bgm(data, seed = 1234) #> Warning: There were 7 rows with missing observations in the input matrix x. #> Since na_action = listwise these rows were excluded from the analysis."},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/articles/diagnostics.html","id":"convergence-diagnostics","dir":"Articles","previous_headings":"","what":"Convergence diagnostics","title":"Diagnostics and Spike-and-Slab Summaries","text":"quality Markov chain can assessed common MCMC diagnostics: R-hat values close 1 (typically 1.01) suggest convergence (Vehtari et al., 2021). effective sample size (ESS) reflects number independent samples provide equivalent precision. Larger ESS values indicate reliable estimates. Monte Carlo standard error (MCSE) measures additional variability introduced using finite number MCMC draws. small MCSE relative posterior standard deviation indicates stable estimates, whereas large MCSE suggests samples needed. Advanced users can inspect traceplots extracting raw samples using external packages coda bayesplot. example using coda package create traceplot pairwise effect parameter.","code":"summary(fit)$pairwise #>                          mean          sd         mcse     n_eff #> intrusion-dreams  0.630465218 0.001505695 0.0645952597 1840.4640 #> intrusion-flash   0.336939066 0.001279900 0.0615246748 2310.7156 #> intrusion-upset   0.198665557 0.067666296 0.0035274998  367.9686 #> intrusion-physior 0.191577877 0.071227938 0.0050170985  201.5559 #> dreams-flash      0.499277762 0.001398210 0.0596431449 1819.6018 #> dreams-upset      0.230190853 0.055082965 0.0014218947 1500.7203 #> dreams-physior    0.005329141 0.021891564 0.0008594282  648.8352 #> flash-upset       0.007130963 0.025475978 0.0010207513  622.9050 #> flash-physior     0.309372051 0.001159184 0.0533283561 2116.4689 #> upset-physior     0.712758036 0.001639670 0.0602202440 1348.8769 #>                       Rhat #> intrusion-dreams  1.000830 #> intrusion-flash   1.001655 #> intrusion-upset   1.011155 #> intrusion-physior 1.009193 #> dreams-flash      1.001358 #> dreams-upset      1.004926 #> dreams-physior    1.003559 #> flash-upset       1.001278 #> flash-physior     1.003235 #> upset-physior     1.002455 library(coda)  param_index = 1 chains = lapply(fit$raw_samples$pairwise, function(mat) mat[, param_index]) mcmc_obj = mcmc.list(lapply(chains, mcmc))  traceplot(mcmc_obj, col = c(\"firebrick\", \"steelblue\", \"darkgreen\", \"goldenrod\"),            main = \"Traceplot of pairwise[1]\")"},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/articles/diagnostics.html","id":"spike-and-slab-summaries","dir":"Articles","previous_headings":"","what":"Spike-and-slab summaries","title":"Diagnostics and Spike-and-Slab Summaries","text":"spike--slab prior yields posterior inclusion probabilities edges: Values near 1.0: strong evidence edge present. Values near 0.0: strong evidence edge absent. Values near 0.5: inconclusive (absence evidence).","code":"coef(fit)$indicator #>           intrusion dreams  flash   upset physior #> intrusion   0.00000 1.0000 1.0000 0.93975  0.0570 #> dreams      1.00000 0.0000 0.9665 1.00000  0.0745 #> flash       1.00000 0.9665 0.0000 0.99800  1.0000 #> upset       0.93975 1.0000 0.9980 0.00000  1.0000 #> physior     0.05700 0.0745 1.0000 1.00000  0.0000"},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/articles/diagnostics.html","id":"bayes-factors","dir":"Articles","previous_headings":"","what":"Bayes factors","title":"Diagnostics and Spike-and-Slab Summaries","text":"prior inclusion probability edge equal 0.5 (e.g., using Bernoulli prior inclusion_probability = 0.5 symmetric Beta prior, main_alpha = main_beta), can directly transform inclusion probabilities Bayes factors edge presence vs absence: Bayes factor favor inclusion (H1) small, meaning little evidence inclusion. Since Bayes factor transitive, can use express evidence favor exclusion (H0) Bayes factor shows strong evidence absence network relation variables intrusion physior.","code":"# Example for one edge p = coef(fit)$indicator[1, 5] BF_10 = p / (1 - p) BF_10 #> [1] 0.06044539 1 / BF_10 #> [1] 16.54386"},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/articles/diagnostics.html","id":"notes-on-runtime","dir":"Articles","previous_headings":"","what":"Notes on runtime","title":"Diagnostics and Spike-and-Slab Summaries","text":"Sampling spike--slab priors can take longer. interactive sessions, progress bars displayed. vignette, suppressed readability.","code":""},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/articles/diagnostics.html","id":"next-steps","dir":"Articles","previous_headings":"","what":"Next steps","title":"Diagnostics and Spike-and-Slab Summaries","text":"See Getting Started simple one-sample workflow. See Model Comparison group differences.","code":""},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/articles/intro.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Getting Started with bgms","text":"bgms package implements Bayesian methods analyzing graphical models binary ordinal variables. estimates main effects (category thresholds) pairwise interactions ordinal Markov random field (MRF), optional Bayesian edge selection via spike––slab priors. package provides two main entry points: bgm() one-sample designs (single network), bgmCompare() independent-sample designs (group comparisons). vignette walks basic workflow: fitting model, summarizing posterior output, visualizing results.","code":""},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/articles/intro.html","id":"wenchuan-dataset","dir":"Articles","previous_headings":"","what":"Wenchuan dataset","title":"Getting Started with bgms","text":"dataset Wenchuan contains responses survivors 2008 Wenchuan earthquake posttraumatic stress items. , analyze subset first five items demonstration.","code":"library(bgms)  # Analyse a subset of the Wenchuan dataset ?Wenchuan data = Wenchuan[, 1:5] head(data) #>      intrusion dreams flash upset physior #> [1,]         2      2     2     2       3 #> [2,]         2      2     2     3       3 #> [3,]         2      4     4     4       3 #> [4,]         2      1     2     2       1 #> [5,]         2      2     2     2       2 #> [6,]         4      3     2     2       2"},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/articles/intro.html","id":"fitting-a-model","dir":"Articles","previous_headings":"","what":"Fitting a model","title":"Getting Started with bgms","text":"main entry point bgm() single-group models bgmCompare() multiple-group comparisons. Note: fitting, progress bars shown interactive sessions. vignette, suppressed clarity. Sampling can take ; progress bars usually help track progress.","code":"fit = bgm(data, seed = 1234) #> Warning: There were 7 rows with missing observations in the input matrix x. #> Since na_action = listwise these rows were excluded from the analysis."},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/articles/intro.html","id":"posterior-summaries","dir":"Articles","previous_headings":"","what":"Posterior summaries","title":"Getting Started with bgms","text":"can also access posterior means inclusion probabilities directly:","code":"summary(fit) #> Posterior summaries from Bayesian estimation: #>  #> Category thresholds: #>                 mean  mcse    sd    n_eff  Rhat #> intrusion (1)  0.478 0.005 0.230 1824.541 1.005 #> intrusion (2) -1.901 0.010 0.326 1014.457 1.004 #> intrusion (3) -4.837 0.017 0.520  941.517 1.004 #> intrusion (4) -9.497 0.028 0.839  890.032 1.003 #> dreams (1)    -0.594 0.004 0.189 1862.815 1.000 #> dreams (2)    -3.797 0.010 0.336 1173.364 1.001 #> ... (use `summary(fit)$main` to see full output) #>  #> Pairwise interactions: #>                    mean    sd  mcse    n_eff  Rhat #> intrusion-dreams  0.630 0.002 0.065 1840.464 1.001 #> intrusion-flash   0.337 0.001 0.062 2310.716 1.002 #> intrusion-upset   0.199 0.068 0.004  367.969 1.011 #> intrusion-physior 0.192 0.071 0.005  201.556 1.009 #> dreams-flash      0.499 0.001 0.060 1819.602 1.001 #> dreams-upset      0.230 0.055 0.001 1500.720 1.005 #> ... (use `summary(fit)$pairwise` to see full output) #> Note: NA values are suppressed in the print table. They occur here when an  #> indicator was zero across all iterations, so mcse/n_eff/Rhat are undefined; #> `summary(fit)$pairwise` still contains the NA values. #>  #> Inclusion probabilities: #>   mean    sd  mcse n0->0 n0->1 n1->0 n1->1   n_eff  Rhat #>  1.000 0.000           0     0     0  3999               #>  1.000 0.000           0     0     0  3999               #>  0.967 0.180 0.015   125     9     9  3856 143.989 1.182 #>  0.940 0.238 0.024   230    11    11  3747  99.558 1.077 #>  1.000 0.000           0     0     0  3999               #>  0.998 0.045 0.001     5     3     3  3988 925.355 1.135 #> ... (use `summary(fit)$indicator` to see full output) #> Note: NA values are suppressed in the print table. They occur when an indicator #> was constant (all 0 or all 1) across all iterations, so sd/mcse/n_eff/Rhat #> are undefined; `summary(fit)$indicator` still contains the NA values. #>  #> Use `summary(fit)$<component>` to access full results. #> See the `easybgm` package for other summary and plotting tools. coef(fit) #> $main #>                 [,1]      [,2]      [,3]       [,4] #> intrusion  0.4783754 -1.901174 -4.837418  -9.496582 #> dreams    -0.5944969 -3.797236 -7.127498 -11.568512 #> flash     -0.1001654 -2.561521 -5.360032  -9.672125 #> upset      0.4066112 -1.329714 -3.413250  -7.103469 #> physior   -0.6107531 -3.162836 -6.212245 -10.557183 #>  #> $pairwise #>           intrusion      dreams       flash       upset     physior #> intrusion 0.0000000 0.630465218 0.336939066 0.198665557 0.191577877 #> dreams    0.6304652 0.000000000 0.499277762 0.230190853 0.005329141 #> flash     0.3369391 0.499277762 0.000000000 0.007130963 0.309372051 #> upset     0.1986656 0.230190853 0.007130963 0.000000000 0.712758036 #> physior   0.1915779 0.005329141 0.309372051 0.712758036 0.000000000 #>  #> $indicator #>           intrusion dreams  flash   upset physior #> intrusion   0.00000 1.0000 1.0000 0.93975  0.0570 #> dreams      1.00000 0.0000 0.9665 1.00000  0.0745 #> flash       1.00000 0.9665 0.0000 0.99800  1.0000 #> upset       0.93975 1.0000 0.9980 0.00000  1.0000 #> physior     0.05700 0.0745 1.0000 1.00000  0.0000"},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/articles/intro.html","id":"network-plot","dir":"Articles","previous_headings":"","what":"Network plot","title":"Getting Started with bgms","text":"visualize network structure, threshold posterior inclusion probabilities 0.5 plot resulting adjacency matrix.","code":"library(qgraph)  median_probability_network = coef(fit)$pairwise median_probability_network[coef(fit)$indicator < 0.5] = 0.0  qgraph(median_probability_network,         theme = \"TeamFortress\",         maximum = 1,        fade = FALSE,        color = c(\"#f0ae0e\"), vsize = 10, repulsion = .9,         label.cex = 1, label.scale = \"FALSE\",         labels = colnames(data))"},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/articles/intro.html","id":"next-steps","dir":"Articles","previous_headings":"","what":"Next steps","title":"Getting Started with bgms","text":"comparing groups, see ?bgmCompare Model Comparison vignette. diagnostics convergence checks, see Diagnostics vignette.","code":""},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Maarten Marsman. Author, maintainer. Giuseppe Arena. Contributor. Karoline Huth. Contributor. Nikola Sekulovski. Contributor. Don van den Bergh. Contributor.","code":""},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Marsman, M., Arena, G., Huth, K., Sekulovski, N., & van den Bergh, D. (2024). bgms: Bayesian analysis networks binary /ordinal variables. https://CRAN.R-project.org/package=bgms","code":"@Manual{,   title = {bgms: Bayesian analysis of networks of binary and/or ordinal variables},   author = {Maarten Marsman and Giuseppe Arena and Karoline Huth and Nikola Sekulovski and Don {van den Bergh}},   year = {2025},   url = {https://CRAN.R-project.org/package=bgms},   note = {R package version 0.1.4.3}, }"},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/index.html","id":"bgms-","dir":"","previous_headings":"","what":"Bayesian Analysis of Networks of Binary and/or Ordinal Variables","title":"Bayesian Analysis of Networks of Binary and/or Ordinal Variables","text":"Bayesian analysis graphical models binary ordinal variables bgms package implements Bayesian estimation model comparison ordinal Markov random fields (MRFs), graphical models represent networks binary /ordinal variables (Marsman et al., 2025). likelihood approximated pseudolikelihood, Markov chain Monte Carlo (MCMC) methods used sample corresponding pseudoposterior distribution model parameters.","code":""},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/index.html","id":"main-functions","dir":"","previous_headings":"","what":"Main functions","title":"Bayesian Analysis of Networks of Binary and/or Ordinal Variables","text":"package two main entry points: bgm() – estimates single network one-sample design. bgmCompare() – compares networks groups independent-sample design.","code":""},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/index.html","id":"effect-selection","dir":"","previous_headings":"","what":"Effect selection","title":"Bayesian Analysis of Networks of Binary and/or Ordinal Variables","text":"functions support effect selection spike--slab priors: Edges one-sample designs:bgm() models presence absence edges variables. Posterior inclusion probabilities indicate plausibility edge can converted Bayes factors conditional independence tests (see Marsman et al., 2025; Sekulovski et al., 2024). Communities/clusters one-sample designs:bgm() can also model community structure. Posterior probabilities number clusters quantify plausibility clustering solutions can converted Bayes factors (see Sekulovski et al., 2025). Group differences independent-sample designs:bgmCompare() models differences edge weights category thresholds groups. Posterior inclusion probabilities indicate plausibility parameter differences can converted Bayes factors tests parameter equivalence (see Marsman et al., 2024).","code":""},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/index.html","id":"learn-more","dir":"","previous_headings":"","what":"Learn more","title":"Bayesian Analysis of Networks of Binary and/or Ordinal Variables","text":"worked examples tutorials, see package vignettes: Getting Started Model Comparison Diagnostics Spike--Slab Summaries can also access directly R :","code":"browseVignettes(\"bgms\")"},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/index.html","id":"why-use-markov-random-fields","dir":"","previous_headings":"","what":"Why use Markov Random Fields?","title":"Bayesian Analysis of Networks of Binary and/or Ordinal Variables","text":"Graphical models networks become central recent psychological psychometric research (Contreras et al., 2019; Marsman & Rhemtulla, 2022; Robinaugh et al., 2020). Markov random field (MRF) models, graph structure reflects partial associations variables (Kindermann & Snell, 1980). MRF, missing edge two variables implies conditional independence given rest network (Lauritzen, 2004). words, remaining variables fully explain away potential association unconnected pair.","code":""},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/index.html","id":"why-use-a-bayesian-approach","dir":"","previous_headings":"","what":"Why use a Bayesian approach?","title":"Bayesian Analysis of Networks of Binary and/or Ordinal Variables","text":"analyzing MRF, often want compare competing hypotheses: Edge presence vs. edge absence (conditional dependence vs. independence) one-sample designs. Parameter difference vs. parameter equivalence independent-sample designs. Frequentist approaches limited comparisons: can reject null hypothesis, provide evidence . result, edge difference excluded, remains unclear whether reflects true absence simply insufficient power. Bayesian inference avoids problem. Using inclusion Bayes factors (Huth et al., 2023; Sekulovski et al., 2024), can quantify evidence directions: Evidence edge presence vs. evidence edge absence, Evidence parameter difference vs. evidence parameter equivalence. makes possible detect structure group differences, also conclude absence evidence.","code":""},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Bayesian Analysis of Networks of Binary and/or Ordinal Variables","text":"current developmental version can installed ","code":"if (!requireNamespace(\"remotes\")) {    install.packages(\"remotes\")    }    remotes::install_github(\"Bayesian-Graphical-Modelling-Lab/bgms\")"},{"path":[]},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/reference/ADHD.html","id":null,"dir":"Reference","previous_headings":"","what":"ADHD Symptom Checklist for Children Aged 6–8 Years — ADHD","title":"ADHD Symptom Checklist for Children Aged 6–8 Years — ADHD","text":"dataset includes ADHD symptom ratings 355 children aged 6 8 years Children’s Attention Project (CAP) cohort (Silk et al. 2019) . sample consists 146 children diagnosed ADHD 209 without diagnosis. Symptoms assessed structured interviews parents using NIMH Diagnostic Interview Schedule Children IV (DISC-IV) (Shaffer et al. 2000) . checklist includes 18 items: 9 Inattentive () 9 Hyperactive/Impulsive (HI). item binary (1 = present, 0 = absent).","code":""},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/reference/ADHD.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ADHD Symptom Checklist for Children Aged 6–8 Years — ADHD","text":"","code":"data(\"ADHD\")"},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/reference/ADHD.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"ADHD Symptom Checklist for Children Aged 6–8 Years — ADHD","text":"matrix 355 rows 19 columns. group ADHD diagnosis: 1 = diagnosed, 0 = diagnosed avoid Often avoids, dislikes, reluctant engage tasks   require sustained mental effort () closeatt Often fails give close attention details makes   careless mistakes schoolwork, work, activities () distract often easily distracted extraneous stimuli () forget often forgetful daily activities () instruct Often follow instructions fails   finish schoolwork, chores, duties workplace () listen Often seem listen spoken directly   () loses Often loses things necessary tasks activities () org Often difficulty organizing tasks activities () susatt Often difficulty sustaining attention tasks play   activities () blurts Often blurts answers questions completed   (HI) fidget Often fidgets hands feet squirms seat   (HI) interrupt Often interrupts intrudes others (HI) motor often \"go\" often acts \"driven motor\"   (HI) quiet Often difficulty playing engaging leisure activities   quietly (HI) runs Often runs climbs excessively situations   inappropriate (HI) seat Often leaves seat classroom situations   remaining seated expected (HI) talks Often talks excessively (HI) turn Often difficulty awaiting turn (HI)","code":""},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/reference/ADHD.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"ADHD Symptom Checklist for Children Aged 6–8 Years — ADHD","text":"Silk et al. (2019) . Data retrieved doi:10.1371/journal.pone.0211053.s004 . Licensed CC-4.0: https://creativecommons.org/licenses//4.0/","code":""},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/reference/ADHD.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"ADHD Symptom Checklist for Children Aged 6–8 Years — ADHD","text":"Shaffer D, Fisher P, Lucas CP, Dulcan MK, Schwab-Stone (2000). “NIMH Diagnostic Interview Schedule Children Version IV (NIMH DISC-IV): description, differences previous versions, reliability common diagnoses.” Journal American Academy Child & Adolescent Psychiatry, 39, 28–38. doi:10.1097/00004583-200001000-00014 , PMID: 10638065. Silk TJ, Malpas CB, Beare R, Efron D, Anderson V, Hazell P, Jongeling B, Nicholson JM, Sciberras E (2019). “network analysis approach ADHD symptoms: sum parts.” PLOS ONE, 14(1), e0211053. doi:10.1371/journal.pone.0211053 .","code":""},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/reference/Boredom.html","id":null,"dir":"Reference","previous_headings":"","what":"Short Boredom Proneness Scale Responses — Boredom","title":"Short Boredom Proneness Scale Responses — Boredom","text":"dataset includes responses 8-item Short Boredom Proneness Scale (SBPS), self-report measure individual's susceptibility boredom (Martarelli et al. 2023) . Items rated 7-point Likert scale ranging 1 (\"strongly disagree\") 7 (\"strongly agree\"). scale administered either English (Struk et al. 2015)  French (translated (Martarelli et al. 2023) ).","code":""},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/reference/Boredom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Short Boredom Proneness Scale Responses — Boredom","text":"","code":"data(\"Boredom\")"},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/reference/Boredom.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Short Boredom Proneness Scale Responses — Boredom","text":"matrix 986 rows 9 columns. row corresponds respondent. language Language SBPS administered: \"en\" = English, \"fr\" = French loose_ends often find “loose ends,” knowing   . entertain find hard entertain . repetitive Many things repetitive monotonous. stimulation takes stimulation get going   people. motivated feel motivated things . keep_interest situations, hard find   something see keep interested. sit_around Much time, just sit around nothing. half_dead_dull Unless something exciting, even dangerous,   feel half-dead dull.","code":""},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/reference/Boredom.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Short Boredom Proneness Scale Responses — Boredom","text":"Martarelli et al. (2023) . Data retrieved https://osf.io/qhux8. Licensed CC-4.0: https://creativecommons.org/licenses//4.0/","code":""},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/reference/Boredom.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Short Boredom Proneness Scale Responses — Boredom","text":"Martarelli CS, Baillifard , Audrin C (2023). “Trait-Based Network Perspective Validation French Short Boredom Proneness Scale.” European Journal Psychological Assessment, 39(6), 390–399. doi:10.1027/1015-5759/a000718 . Struk AA, Carriere JSA, Cheyne JA, Danckert J (2015). “Short Boredom Proneness Scale: Development Psychometric Properties.” Assessment, 24(3), 346–359. doi:10.1177/1073191115609996 .","code":""},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/reference/Wenchuan.html","id":null,"dir":"Reference","previous_headings":"","what":"PTSD Symptoms in Wenchuan Earthquake Survivors Who Lost a Child — Wenchuan","title":"PTSD Symptoms in Wenchuan Earthquake Survivors Who Lost a Child — Wenchuan","text":"dataset contains responses 17 items assessing symptoms post-traumatic stress disorder (PTSD) Chinese adults survived 2008 Wenchuan earthquake lost least one child disaster (McNally et al. 2015) . Participants completed civilian version Posttraumatic Checklist, item corresponding DSM-IV PTSD symptom. Items rated 5-point Likert scale \"\" \"extremely,\" indicating degree symptom bothered respondent past month.","code":""},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/reference/Wenchuan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PTSD Symptoms in Wenchuan Earthquake Survivors Who Lost a Child — Wenchuan","text":"","code":"data(\"Wenchuan\")"},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/reference/Wenchuan.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"PTSD Symptoms in Wenchuan Earthquake Survivors Who Lost a Child — Wenchuan","text":"matrix 362 rows 17 columns. row represents participant. intrusion Repeated, disturbing memories, thoughts, images   stressful experience past? dreams Repeated, disturbing dreams stressful experience   past? flash Suddenly acting feeling stressful experience   happening (reliving )? upset Feeling upset something reminded stressful   experience past? physior physical reactions (e.g., heart pounding, trouble   breathing, sweating) something reminded stressful experience   past? avoidth Avoiding thinking talking stressful   experience past avoiding feelings related ? avoidact Avoiding activities situations reminded   stressful experience past? amnesia Trouble remembering important parts stressful   experience past? lossint Loss interest activities used enjoy? distant Feeling distant cut people? numb Feeling emotionally numb unable loving   feelings close ? future Feeling future somehow cut short? sleep Trouble falling staying asleep? anger Feeling irritable angry outbursts? concen difficulty concentrating? hyper \"super-alert\" watchful guard? startle Feeling jumpy easily startled?","code":""},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/reference/Wenchuan.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"PTSD Symptoms in Wenchuan Earthquake Survivors Who Lost a Child — Wenchuan","text":"https://psychosystems.org/wp-content/uploads/2014/10/Wenchuan.csv","code":""},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/reference/Wenchuan.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"PTSD Symptoms in Wenchuan Earthquake Survivors Who Lost a Child — Wenchuan","text":"McNally RJ, Robinaugh DJ, Wu GWY, Wang L, Deserno MK, Borsboom D (2015). “Mental disorders causal systems: network approach posttraumatic stress disorder.” Clinical Psychological Science, 6, 836–849. doi:10.1177/2167702614553230 .","code":""},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/reference/bgm.html","id":null,"dir":"Reference","previous_headings":"","what":"Bayesian Estimation or Edge Selection for Markov Random Fields — bgm","title":"Bayesian Estimation or Edge Selection for Markov Random Fields — bgm","text":"bgm function estimates pseudoposterior distribution category thresholds (main effects) pairwise interaction parameters Markov Random Field (MRF) model binary /ordinal variables. Optionally, performs Bayesian edge selection using spike--slab priors infer network structure.","code":""},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/reference/bgm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bayesian Estimation or Edge Selection for Markov Random Fields — bgm","text":"","code":"bgm(   x,   variable_type = \"ordinal\",   baseline_category,   iter = 1000,   warmup = 1000,   pairwise_scale = 2.5,   main_alpha = 0.5,   main_beta = 0.5,   edge_selection = TRUE,   edge_prior = c(\"Bernoulli\", \"Beta-Bernoulli\", \"Stochastic-Block\"),   inclusion_probability = 0.5,   beta_bernoulli_alpha = 1,   beta_bernoulli_beta = 1,   dirichlet_alpha = 1,   lambda = 1,   na_action = c(\"listwise\", \"impute\"),   update_method = c(\"nuts\", \"adaptive-metropolis\", \"hamiltonian-mc\"),   target_accept,   hmc_num_leapfrogs = 100,   nuts_max_depth = 10,   learn_mass_matrix = FALSE,   chains = 4,   cores = parallel::detectCores(),   display_progress = c(\"per-chain\", \"total\", \"none\"),   seed = NULL,   interaction_scale,   burnin,   save,   threshold_alpha,   threshold_beta )"},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/reference/bgm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bayesian Estimation or Edge Selection for Markov Random Fields — bgm","text":"x data frame matrix n rows p columns containing binary ordinal responses. Variables automatically recoded non-negative integers (0, 1, ..., m). regular ordinal variables, unobserved categories collapsed; Blume–Capel variables, categories retained. variable_type Character character vector. Specifies type variable x. Allowed values: \"ordinal\" \"blume-capel\". Binary variables automatically treated \"ordinal\". Default: \"ordinal\". baseline_category Integer vector. Baseline category used Blume–Capel variables. Can single integer (applied ) vector length p. Required least one variable type \"blume-capel\". iter Integer. Number post–burn-iterations (per chain). Default: 1e3. warmup Integer. Number warmup iterations collecting samples. minimum 1000 iterations enforced, warning smaller value requested. Default: 1e3. pairwise_scale Double. Scale Cauchy prior pairwise interaction parameters. Default: 2.5. main_alpha, main_beta Double. Shape parameters beta-prime prior threshold parameters. Must positive. equal, prior symmetric. Defaults: main_alpha = 0.5 main_beta = 0.5. edge_selection Logical. Whether perform Bayesian edge selection. FALSE, model estimates edges. Default: TRUE. edge_prior Character. Specifies prior edge inclusion. Options: \"Bernoulli\", \"Beta-Bernoulli\", \"Stochastic-Block\". Default: \"Bernoulli\". inclusion_probability Numeric scalar. Prior inclusion probability edge (used Bernoulli prior). Default: 0.5. beta_bernoulli_alpha, beta_bernoulli_beta Double. Shape parameters beta distribution Beta–Bernoulli Stochastic-Block priors. Must positive. Defaults: beta_bernoulli_alpha = 1 beta_bernoulli_beta = 1. dirichlet_alpha Double. Concentration parameter Dirichlet prior block assignments (used Stochastic Block model). Default: 1. lambda Double. Rate zero-truncated Poisson prior number clusters Stochastic Block Model. Default: 1. na_action Character. Specifies missing data handling. Either \"listwise\" (drop rows missing values) \"impute\" (perform single imputation sampling). Default: \"listwise\". update_method Character. Specifies MCMC sampler updates model parameters: \"adaptive-metropolis\" Componentwise adaptive Metropolis–Hastings     Robbins–Monro proposal adaptation. \"hamiltonian-mc\" Hamiltonian Monte Carlo fixed path length     (number leapfrog steps set hmc_num_leapfrogs). \"nuts\" -U-Turn Sampler, adaptive form HMC     dynamically chosen trajectory lengths. Default: \"nuts\". target_accept Numeric 0 1. Target acceptance rate sampler. Defaults set automatically supplied: 0.44 adaptive Metropolis, 0.65 HMC, 0.60 NUTS. hmc_num_leapfrogs Integer. Number leapfrog steps Hamiltonian Monte Carlo. Must positive. Default: 100. nuts_max_depth Integer. Maximum tree depth NUTS. Must positive. Default: 10. learn_mass_matrix Logical. TRUE, adapt diagonal mass matrix warmup (HMC/NUTS ). FALSE, use identity matrix. Default: FALSE. chains Integer. Number parallel chains run. Default: 4. cores Integer. Number CPU cores parallel execution. Default: parallel::detectCores(). display_progress Logical. Whether show progress bar sampling. Default: TRUE. seed Optional integer. Random seed reproducibility. Must single non-negative integer. interaction_scale, burnin, save, threshold_alpha, threshold_beta Deprecated arguments. Use pairwise_scale, warmup, main_alpha, main_beta instead.","code":""},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/reference/bgm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bayesian Estimation or Edge Selection for Markov Random Fields — bgm","text":"list class \"bgms\" posterior summaries, posterior mean matrices, access raw MCMC draws. object can passed print(), summary(), coef(), as_draws() methods inspection analysis. Main components include: posterior_summary_main: Data frame posterior summaries     (mean, sd, MCSE, ESS, Rhat) category threshold parameters. posterior_summary_pairwise: Data frame posterior     summaries pairwise interaction parameters. posterior_summary_indicator: Data frame posterior     summaries edge inclusion indicators (edge_selection = TRUE). posterior_mean_main: Matrix posterior mean thresholds     (rows = variables, cols = categories parameters). posterior_mean_pairwise: Symmetric matrix posterior mean     pairwise interaction strengths. posterior_mean_indicator: Symmetric matrix posterior mean     inclusion probabilities (edge selection enabled). Additional summaries returned     edge_prior = \"Stochastic-Block\". details prior     see Sekulovski et al. (2025) . posterior_summary_pairwise_allocations: Data frame       posterior summaries (mean, sd, MCSE, ESS, Rhat) pairwise       cluster co-occurrence nodes. serves indicate       whether estimated posterior allocations,co-clustering matrix       posterior cluster probabilities (see blow) converged. posterior_coclustering_matrix: symmetric matrix       pairwise proportions occurrence every variable. matrix       can plotted visually inspect estimated number clusters       visually inspect nodes tend switch clusters. posterior_mean_allocations: vector posterior mean       cluster allocations nodes. calculated using method       proposed Dahl (2009) . posterior_mode_allocations: vector posterior        mode cluster allocations nodes. posterior_num_blocks: data frame estimated       posterior inclusion probabilities possible number clusters. raw_samples: list raw MCMC draws per chain: main List main effect samples. pairwise List pairwise effect samples. indicator List indicator samples         (edge selection enabled). allocations List cluster allocations         (SBM prior used). nchains Number chains. niter Number post–warmup iterations per chain. parameter_names Named lists parameter labels. arguments: list function call arguments metadata     (e.g., number variables, warmup, sampler settings, package version). summary() method prints formatted posterior summaries, coef() extracts posterior mean matrices, as_draws() converts raw samples posterior::draws_df object use posterior package. NUTS diagnostics (tree depth, divergences, energy, E-BFMI) included fit$nuts_diag update_method = \"nuts\".","code":""},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/reference/bgm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bayesian Estimation or Edge Selection for Markov Random Fields — bgm","text":"function models joint distribution binary ordinal variables using Markov Random Field, support edge selection Bayesian variable selection. statistical foundation model described Marsman et al. (2025) , ordinal MRF model Bayesian estimation procedure first introduced. implementation bgms since extended updated (e.g., alternative priors, parallel chains, HMC/NUTS warmup), builds original framework. Key components model described sections .","code":""},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/reference/bgm.html","id":"ordinal-variables","dir":"Reference","previous_headings":"","what":"Ordinal Variables","title":"Bayesian Estimation or Edge Selection for Markov Random Fields — bgm","text":"function supports two types ordinal variables: Regular ordinal variables: Assigns category threshold parameter response category except lowest. model imposes additional constraints distribution category responses. Blume-Capel ordinal variables: Assume baseline category (e.g., “neutral” response) score responses distance baseline. Category thresholds modeled : $$\\mu_{c} = \\alpha \\cdot c + \\beta \\cdot (c - b)^2$$ : \\(\\mu_{c}\\): category threshold category \\(c\\) \\(\\alpha\\): linear trend across categories \\(\\beta\\): preference toward away baseline \\(\\beta < 0\\), model favors responses near baseline      category; \\(\\beta > 0\\), favors responses farther away (.e.,      extremes). \\(b\\): baseline category","code":""},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/reference/bgm.html","id":"edge-selection","dir":"Reference","previous_headings":"","what":"Edge Selection","title":"Bayesian Estimation or Edge Selection for Markov Random Fields — bgm","text":"edge_selection = TRUE, function performs Bayesian variable selection pairwise interactions (edges) MRF using spike--slab priors. Supported priors edge inclusion: Bernoulli: Fixed inclusion probability across edges. Beta-Bernoulli: Inclusion probability assigned Beta   prior distribution. Stochastic-Block: Cluster-based edge priors Beta,   Dirichlet, Poisson hyperpriors. priors operate via binary indicator variables controlling inclusion exclusion edge MRF.","code":""},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/reference/bgm.html","id":"prior-distributions","dir":"Reference","previous_headings":"","what":"Prior Distributions","title":"Bayesian Estimation or Edge Selection for Markov Random Fields — bgm","text":"Pairwise effects: Modeled Cauchy (slab) prior. Main effects: Modeled using beta-prime   distribution. Edge indicators: Use either Bernoulli, Beta-Bernoulli,   Stochastic-Block prior ().","code":""},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/reference/bgm.html","id":"sampling-algorithms-and-warmup","dir":"Reference","previous_headings":"","what":"Sampling Algorithms and Warmup","title":"Bayesian Estimation or Edge Selection for Markov Random Fields — bgm","text":"Parameters updated within Gibbs framework, conditional updates can carried using different algorithms: Adaptive Metropolis–Hastings: Componentwise random–walk     updates main effects pairwise effects. Proposal standard     deviations adapted burn–via Robbins–Monro updates     toward target acceptance rate. Hamiltonian Monte Carlo (HMC): Joint updates     parameters using fixed–length leapfrog trajectories. Step size     tuned warmup via dual–averaging; diagonal mass matrix can     also adapted learn_mass_matrix = TRUE. –U–Turn Sampler (NUTS): adaptive extension HMC     dynamically chooses trajectory lengths. Warmup uses staged     adaptation schedule (fast–slow–fast) stabilize step size ,     enabled, mass matrix. edge_selection = TRUE, updates edge–inclusion indicators carried Metropolis–Hastings steps. switched core warmup phase, ensuring graph updates occur samplers’ tuning parameters (step size, mass matrix, proposal SDs) stabilized. warmup, adaptation disabled. Step size mass matrix fixed learned values, proposal SDs remain constant.","code":""},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/reference/bgm.html","id":"warmup-and-adaptation","dir":"Reference","previous_headings":"","what":"Warmup and Adaptation","title":"Bayesian Estimation or Edge Selection for Markov Random Fields — bgm","text":"warmup procedure bgm based multi–stage adaptation schedule used Stan (Stan Development Team 2023) . Warmup iterations split several phases: Stage 1 (fast adaptation): short initial interval     step size (HMC/NUTS) adapted, allowing chain     move quickly toward typical set. Stage 2 (slow windows): sequence expanding,     memoryless windows step size ,     learn_mass_matrix = TRUE, diagonal mass matrix     adapted. window ends reset dual–averaging scheme     improved stability. Stage 3a (final fast interval): short interval     end core warmup step size adapted one final time. Stage 3b (proposal–SD tuning): active     edge_selection = TRUE HMC/NUTS. phase,     Robbins–Monro adaptation proposal standard deviations     performed Metropolis steps used edge–selection moves. Stage 3c (graph selection warmup): Also relevant     edge_selection = TRUE. start phase,     random graph structure initialized, Metropolis–Hastings     updates edge inclusion indicators switched . edge_selection = FALSE, total number warmup iterations equals user–specified burnin. edge_selection = TRUE update_method \"nuts\" \"hamiltonian-mc\", schedule automatically appends additional Stage-3b Stage-3c intervals, total warmup strictly greater requested burnin. warmup phases, sampler transitions sampling phase adaptation disabled. Step size mass matrix (HMC/NUTS) fixed learned values, proposal SDs remain constant. staged design improves stability proposals ensures local parameters (step size) global parameters (mass matrix, proposal SDs) tuned collecting posterior samples. adaptive Metropolis–Hastings runs, step size mass matrix adaptation relevant. Proposal SDs tuned continuously burn–using Robbins–Monro updates, without staged fast/slow intervals.","code":""},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/reference/bgm.html","id":"missing-data","dir":"Reference","previous_headings":"","what":"Missing Data","title":"Bayesian Estimation or Edge Selection for Markov Random Fields — bgm","text":"na_action = \"listwise\", observations missing values removed. na_action = \"impute\", missing values imputed Gibbs sampling.","code":""},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/reference/bgm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Bayesian Estimation or Edge Selection for Markov Random Fields — bgm","text":"Dahl DB (2009). “Modal clustering class product partition models.” Bayesian Analysis, 4(2), 243–264. doi:10.1214/09-BA409 . Marsman M, van den Bergh D, Haslbeck JMB (2025). “Bayesian analysis ordinal Markov random field.” Psychometrika, 90, 146–-182. Sekulovski N, Arena G, Haslbeck JMB, Huth KBS, Friel N, Marsman M (2025). “Stochastic Block Prior Clustering Graphical Models.” Retrieved https://osf.io/preprints/psyarxiv/29p3m_v1. OSF preprint. Stan Development Team (2023). Stan Modeling Language Users Guide Reference Manual. Version 2.33, https://mc-stan.org/docs/.","code":""},{"path":[]},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/reference/bgm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bayesian Estimation or Edge Selection for Markov Random Fields — bgm","text":"","code":"# \\donttest{ # Run bgm on subset of the Wenchuan dataset fit = bgm(x = Wenchuan[, 1:5]) #> Warning: There were 7 rows with missing observations in the input matrix x. #> Since na_action = listwise these rows were excluded from the analysis. #> Chain 1 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 50/2200 (2.3%) #> Chain 2 (Warmup): ⦗━╺━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 56/2200 (2.5%) #> Chain 3 (Warmup): ⦗━╺━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 62/2200 (2.8%) #> Chain 4 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 43/2200 (2.0%) #> Total   (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 211/8800 (2.4%) #> Elapsed: 2s | ETA: 1m 21s #> Chain 1 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 100/2200 (4.5%) #> Chain 2 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 104/2200 (4.7%) #> Chain 3 (Warmup): ⦗━━╺━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 116/2200 (5.3%) #> Chain 4 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 85/2200 (3.9%) #> Total   (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 405/8800 (4.6%) #> Elapsed: 4s | ETA: 1m 22s #> Chain 1 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 150/2200 (6.8%) #> Chain 2 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 153/2200 (7.0%) #> Chain 3 (Warmup): ⦗━━━╺━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 169/2200 (7.7%) #> Chain 4 (Warmup): ⦗━━╺━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 127/2200 (5.8%) #> Total   (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 599/8800 (6.8%) #> Elapsed: 6s | ETA: 1m 22s #> Chain 1 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 200/2200 (9.1%) #> Chain 2 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 195/2200 (8.9%) #> Chain 3 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 218/2200 (9.9%) #> Chain 4 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 161/2200 (7.3%) #> Total   (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 774/8800 (8.8%) #> Elapsed: 8s | ETA: 1m 22s #> Chain 1 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 250/2200 (11.4%) #> Chain 2 (Warmup): ⦗━━━━╺━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 241/2200 (11.0%) #> Chain 3 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 263/2200 (12.0%) #> Chain 4 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 203/2200 (9.2%) #> Total   (Warmup): ⦗━━━━╺━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 957/8800 (10.9%) #> Elapsed: 10s | ETA: 1m 21s #> Chain 1 (Warmup): ⦗━━━━━╺━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 300/2200 (13.6%) #> Chain 2 (Warmup): ⦗━━━━━╺━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 281/2200 (12.8%) #> Chain 3 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 311/2200 (14.1%) #> Chain 4 (Warmup): ⦗━━━━╺━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 244/2200 (11.1%) #> Total   (Warmup): ⦗━━━━━╺━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1136/8800 (12.9%) #> Elapsed: 11s | ETA: 1m 14s #> Chain 1 (Warmup): ⦗━━━━━━╺━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 350/2200 (15.9%) #> Chain 2 (Warmup): ⦗━━━━━━╺━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 332/2200 (15.1%) #> Chain 3 (Warmup): ⦗━━━━━━╺━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 356/2200 (16.2%) #> Chain 4 (Warmup): ⦗━━━━━╺━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 290/2200 (13.2%) #> Total   (Warmup): ⦗━━━━━━╺━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1328/8800 (15.1%) #> Elapsed: 13s | ETA: 1m 13s #> Chain 1 (Warmup): ⦗━━━━━━━╺━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 400/2200 (18.2%) #> Chain 2 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 382/2200 (17.4%) #> Chain 3 (Warmup): ⦗━━━━━━━╺━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 399/2200 (18.1%) #> Chain 4 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 326/2200 (14.8%) #> Total   (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1507/8800 (17.1%) #> Elapsed: 15s | ETA: 1m 12s #> Chain 1 (Warmup): ⦗━━━━━━━━╺━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 450/2200 (20.5%) #> Chain 2 (Warmup): ⦗━━━━━━━━╺━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 443/2200 (20.1%) #> Chain 3 (Warmup): ⦗━━━━━━━━╺━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 461/2200 (21.0%) #> Chain 4 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 379/2200 (17.2%) #> Total   (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1733/8800 (19.7%) #> Elapsed: 17s | ETA: 1m 9s #> Chain 1 (Warmup): ⦗━━━━━━━━━╺━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 500/2200 (22.7%) #> Chain 2 (Warmup): ⦗━━━━━━━━━╺━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 499/2200 (22.7%) #> Chain 3 (Warmup): ⦗━━━━━━━━━╺━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 513/2200 (23.3%) #> Chain 4 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 430/2200 (19.5%) #> Total   (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1942/8800 (22.1%) #> Elapsed: 19s | ETA: 1m 7s #> Chain 1 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 550/2200 (25.0%) #> Chain 2 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 549/2200 (25.0%) #> Chain 3 (Warmup): ⦗━━━━━━━━━━╺━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 561/2200 (25.5%) #> Chain 4 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 486/2200 (22.1%) #> Total   (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 2146/8800 (24.4%) #> Elapsed: 21s | ETA: 1m 5s #> Chain 1 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 600/2200 (27.3%) #> Chain 2 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 599/2200 (27.2%) #> Chain 3 (Warmup): ⦗━━━━━━━━━━━╺━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 630/2200 (28.6%) #> Chain 4 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 541/2200 (24.6%) #> Total   (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 2370/8800 (26.9%) #> Elapsed: 23s | ETA: 1m 2s #> Chain 1 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 650/2200 (29.5%) #> Chain 2 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 658/2200 (29.9%) #> Chain 3 (Warmup): ⦗━━━━━━━━━━━━╺━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 681/2200 (31.0%) #> Chain 4 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 595/2200 (27.0%) #> Total   (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 2584/8800 (29.4%) #> Elapsed: 25s | ETA: 1m #> Chain 1 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 700/2200 (31.8%) #> Chain 2 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 709/2200 (32.2%) #> Chain 3 (Warmup): ⦗━━━━━━━━━━━━━╺━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 735/2200 (33.4%) #> Chain 4 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 657/2200 (29.9%) #> Total   (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 2801/8800 (31.8%) #> Elapsed: 28s | ETA: 60s #> Chain 1 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 750/2200 (34.1%) #> Chain 2 (Warmup): ⦗━━━━━━━━━━━━━━╺━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 773/2200 (35.1%) #> Chain 3 (Warmup): ⦗━━━━━━━━━━━━━━╺━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 788/2200 (35.8%) #> Chain 4 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 713/2200 (32.4%) #> Total   (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 3024/8800 (34.4%) #> Elapsed: 29s | ETA: 55s #> Chain 1 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 800/2200 (36.4%) #> Chain 2 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 823/2200 (37.4%) #> Chain 3 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 824/2200 (37.5%) #> Chain 4 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 764/2200 (34.7%) #> Total   (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 3211/8800 (36.5%) #> Elapsed: 31s | ETA: 54s #> Chain 1 (Warmup): ⦗━━━━━━━━━━━━━━━╺━━━━━━━━━━━━━━━━━━━━━━━━⦘ 850/2200 (38.6%) #> Chain 2 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 859/2200 (39.0%) #> Chain 3 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 872/2200 (39.6%) #> Chain 4 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 804/2200 (36.5%) #> Total   (Warmup): ⦗━━━━━━━━━━━━━━━╺━━━━━━━━━━━━━━━━━━━━━━━━⦘ 3385/8800 (38.5%) #> Elapsed: 33s | ETA: 53s #> Chain 1 (Warmup): ⦗━━━━━━━━━━━━━━━━╺━━━━━━━━━━━━━━━━━━━━━━━⦘ 900/2200 (40.9%) #> Chain 2 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 911/2200 (41.4%) #> Chain 3 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 910/2200 (41.4%) #> Chain 4 (Warmup): ⦗━━━━━━━━━━━━━━━╺━━━━━━━━━━━━━━━━━━━━━━━━⦘ 847/2200 (38.5%) #> Total   (Warmup): ⦗━━━━━━━━━━━━━━━━╺━━━━━━━━━━━━━━━━━━━━━━━⦘ 3568/8800 (40.5%) #> Elapsed: 34s | ETA: 50s #> Chain 1 (Warmup): ⦗━━━━━━━━━━━━━━━━━╺━━━━━━━━━━━━━━━━━━━━━━⦘ 950/2200 (43.2%) #> Chain 2 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 964/2200 (43.8%) #> Chain 3 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 973/2200 (44.2%) #> Chain 4 (Warmup): ⦗━━━━━━━━━━━━━━━━╺━━━━━━━━━━━━━━━━━━━━━━━⦘ 891/2200 (40.5%) #> Total   (Warmup): ⦗━━━━━━━━━━━━━━━━━╺━━━━━━━━━━━━━━━━━━━━━━⦘ 3778/8800 (42.9%) #> Elapsed: 36s | ETA: 48s #> Chain 1 (Warmup): ⦗━━━━━━━━━━━━━━━━━━╺━━━━━━━━━━━━━━━━━━━━━⦘ 1000/2200 (45.5%) #> Chain 2 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1018/2200 (46.3%) #> Chain 3 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1023/2200 (46.5%) #> Chain 4 (Warmup): ⦗━━━━━━━━━━━━━━━━━╺━━━━━━━━━━━━━━━━━━━━━━⦘ 947/2200 (43.0%) #> Total   (Warmup): ⦗━━━━━━━━━━━━━━━━━━╺━━━━━━━━━━━━━━━━━━━━━⦘ 3988/8800 (45.3%) #> Elapsed: 38s | ETA: 46s #> Chain 1 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━╺━━━━━━━━━━━━━━━━━━━━⦘ 1050/2200 (47.7%) #> Chain 2 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━╺━━━━━━━━━━━━━━━━━━━━⦘ 1065/2200 (48.4%) #> Chain 3 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━╺━━━━━━━━━━━━━━━━━━━━⦘ 1072/2200 (48.7%) #> Chain 4 (Warmup): ⦗━━━━━━━━━━━━━━━━━━╺━━━━━━━━━━━━━━━━━━━━━⦘ 995/2200 (45.2%) #> Total   (Warmup): ⦗━━━━━━━━━━━━━━━━━━━╺━━━━━━━━━━━━━━━━━━━━⦘ 4182/8800 (47.5%) #> Elapsed: 40s | ETA: 44s #> Chain 1 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1100/2200 (50.0%) #> Chain 2 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1128/2200 (51.3%) #> Chain 3 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1131/2200 (51.4%) #> Chain 4 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━╺━━━━━━━━━━━━━━━━━━━━⦘ 1058/2200 (48.1%) #> Total   (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━╺━━━━━━━━━━━━━━━━━━━⦘ 4417/8800 (50.2%) #> Elapsed: 42s | ETA: 42s #> Chain 1 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1150/2200 (52.3%) #> Chain 2 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━╺━━━━━━━━━━━━━━━━━━⦘ 1170/2200 (53.2%) #> Chain 3 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━╺━━━━━━━━━━━━━━━━━━⦘ 1159/2200 (52.7%) #> Chain 4 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1088/2200 (49.5%) #> Total   (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 4567/8800 (51.9%) #> Elapsed: 43s | ETA: 40s #> Chain 1 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1200/2200 (54.5%) #> Chain 2 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1204/2200 (54.7%) #> Chain 3 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1210/2200 (55.0%) #> Chain 4 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1144/2200 (52.0%) #> Total   (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 4758/8800 (54.1%) #> Elapsed: 45s | ETA: 38s #> Chain 1 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1250/2200 (56.8%) #> Chain 2 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1242/2200 (56.5%) #> Chain 3 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1250/2200 (56.8%) #> Chain 4 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1191/2200 (54.1%) #> Total   (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━╺━━━━━━━━━━━━━━━━━⦘ 4933/8800 (56.1%) #> Elapsed: 46s | ETA: 36s #> Chain 1 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1300/2200 (59.1%) #> Chain 2 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1296/2200 (58.9%) #> Chain 3 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1305/2200 (59.3%) #> Chain 4 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1241/2200 (56.4%) #> Total   (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━╺━━━━━━━━━━━━━━━━⦘ 5142/8800 (58.4%) #> Elapsed: 48s | ETA: 34s #> Chain 1 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1350/2200 (61.4%) #> Chain 2 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━╺━━━━━━━━━━━━━━━⦘ 1342/2200 (61.0%) #> Chain 3 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1353/2200 (61.5%) #> Chain 4 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━╺━━━━━━━━━━━━━━━━⦘ 1287/2200 (58.5%) #> Total   (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━╺━━━━━━━━━━━━━━━⦘ 5332/8800 (60.6%) #> Elapsed: 49s | ETA: 32s #> Chain 1 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━╺━━━━━━━━━━━━━━⦘ 1400/2200 (63.6%) #> Chain 2 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━╺━━━━━━━━━━━━━━⦘ 1399/2200 (63.6%) #> Chain 3 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1406/2200 (63.9%) #> Chain 4 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━╺━━━━━━━━━━━━━━━⦘ 1337/2200 (60.8%) #> Total   (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━╺━━━━━━━━━━━━━━⦘ 5542/8800 (63.0%) #> Elapsed: 51s | ETA: 30s #> Chain 1 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━╺━━━━━━━━━━━━━⦘ 1450/2200 (65.9%) #> Chain 2 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━╺━━━━━━━━━━━━━⦘ 1447/2200 (65.8%) #> Chain 3 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━╺━━━━━━━━━━━━━⦘ 1451/2200 (66.0%) #> Chain 4 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━╺━━━━━━━━━━━━━━⦘ 1382/2200 (62.8%) #> Total   (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━╺━━━━━━━━━━━━━⦘ 5730/8800 (65.1%) #> Elapsed: 53s | ETA: 28s #> Chain 1 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━╺━━━━━━━━━━━━⦘ 1500/2200 (68.2%) #> Chain 2 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━╺━━━━━━━━━━━━⦘ 1497/2200 (68.0%) #> Chain 3 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━╺━━━━━━━━━━━━⦘ 1500/2200 (68.2%) #> Chain 4 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1425/2200 (64.8%) #> Total   (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 5922/8800 (67.3%) #> Elapsed: 54s | ETA: 26s #> Chain 1 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━╺━━━━━━━━━━━⦘ 1550/2200 (70.5%) #> Chain 2 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━╺━━━━━━━━━━━⦘ 1541/2200 (70.0%) #> Chain 3 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1535/2200 (69.8%) #> Chain 4 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1471/2200 (66.9%) #> Total   (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 6097/8800 (69.3%) #> Elapsed: 55s | ETA: 24s #> Chain 1 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╺━━━━━━━━━━⦘ 1600/2200 (72.7%) #> Chain 2 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1593/2200 (72.4%) #> Chain 3 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1592/2200 (72.4%) #> Chain 4 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1527/2200 (69.4%) #> Total   (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 6312/8800 (71.7%) #> Elapsed: 57s | ETA: 22s #> Chain 1 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1650/2200 (75.0%) #> Chain 2 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1646/2200 (74.8%) #> Chain 3 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1636/2200 (74.4%) #> Chain 4 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1572/2200 (71.5%) #> Total   (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 6504/8800 (73.9%) #> Elapsed: 59s | ETA: 21s #> Chain 1 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1700/2200 (77.3%) #> Chain 2 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1695/2200 (77.0%) #> Chain 3 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╺━━━━━━━━━⦘ 1673/2200 (76.0%) #> Chain 4 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╺━━━━━━━━━━⦘ 1614/2200 (73.4%) #> Total   (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╺━━━━━━━━━⦘ 6682/8800 (75.9%) #> Elapsed: 1m | ETA: 19s #> Chain 1 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1750/2200 (79.5%) #> Chain 2 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1756/2200 (79.8%) #> Chain 3 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╺━━━━━━━━⦘ 1728/2200 (78.5%) #> Chain 4 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╺━━━━━━━━━⦘ 1668/2200 (75.8%) #> Total   (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╺━━━━━━━━⦘ 6902/8800 (78.4%) #> Elapsed: 1m 2s | ETA: 17s #> Chain 1 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1800/2200 (81.8%) #> Chain 2 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1811/2200 (82.3%) #> Chain 3 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╺━━━━━━━⦘ 1774/2200 (80.6%) #> Chain 4 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╺━━━━━━━━⦘ 1718/2200 (78.1%) #> Total   (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╺━━━━━━━⦘ 7103/8800 (80.7%) #> Elapsed: 1m 3s | ETA: 15s #> Chain 1 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1850/2200 (84.1%) #> Chain 2 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1854/2200 (84.3%) #> Chain 3 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╺━━━━━━⦘ 1831/2200 (83.2%) #> Chain 4 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╺━━━━━━━⦘ 1762/2200 (80.1%) #> Total   (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╺━━━━━━⦘ 7297/8800 (82.9%) #> Elapsed: 1m 5s | ETA: 13s #> Chain 1 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1900/2200 (86.4%) #> Chain 2 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1904/2200 (86.5%) #> Chain 3 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1869/2200 (85.0%) #> Chain 4 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1799/2200 (81.8%) #> Total   (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 7472/8800 (84.9%) #> Elapsed: 1m 6s | ETA: 12s #> Chain 1 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╺━━━━⦘ 1950/2200 (88.6%) #> Chain 2 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1953/2200 (88.8%) #> Chain 3 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1918/2200 (87.2%) #> Chain 4 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1848/2200 (84.0%) #> Total   (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 7669/8800 (87.1%) #> Elapsed: 1m 8s | ETA: 10s #> Chain 1 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╺━━━⦘ 2000/2200 (90.9%) #> Chain 2 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╺━━━⦘ 2002/2200 (91.0%) #> Chain 3 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1966/2200 (89.4%) #> Chain 4 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1899/2200 (86.3%) #> Total   (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 7867/8800 (89.4%) #> Elapsed: 1m 10s | ETA: 8s #> Chain 1 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╺━━⦘ 2050/2200 (93.2%) #> Chain 2 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╺━━⦘ 2060/2200 (93.6%) #> Chain 3 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 2019/2200 (91.8%) #> Chain 4 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╺━━━━⦘ 1943/2200 (88.3%) #> Total   (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 8072/8800 (91.7%) #> Elapsed: 1m 11s | ETA: 6s #> Chain 1 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╺━⦘ 2100/2200 (95.5%) #> Chain 2 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╺━⦘ 2101/2200 (95.5%) #> Chain 3 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 2066/2200 (93.9%) #> Chain 4 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╺━━━⦘ 1981/2200 (90.0%) #> Total   (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╺━━⦘ 8248/8800 (93.7%) #> Elapsed: 1m 12s | ETA: 5s #> Chain 1 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╺⦘ 2150/2200 (97.7%) #> Chain 2 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╺⦘ 2148/2200 (97.6%) #> Chain 3 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╺━⦘ 2113/2200 (96.0%) #> Chain 4 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 2033/2200 (92.4%) #> Total   (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╺━⦘ 8444/8800 (96.0%) #> Elapsed: 1m 14s | ETA: 3s #> Chain 1 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 2200/2200 (100.0%) #> Chain 2 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 2193/2200 (99.7%) #> Chain 3 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╺⦘ 2170/2200 (98.6%) #> Chain 4 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 2084/2200 (94.7%) #> Total   (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╺⦘ 8647/8800 (98.3%) #> Elapsed: 1m 16s | ETA: 1s #> Chain 1 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 2200/2200 (100.0%) #> Chain 2 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 2200/2200 (100.0%) #> Chain 3 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 2200/2200 (100.0%) #> Chain 4 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 2200/2200 (100.0%) #> Total   (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 8800/8800 (100.0%) #> Elapsed: 1m 18s | ETA: 0s #> NUTS Diagnostics Summary: #>   Total divergences:         0  #>   Max tree depth hits:       0  #>   Min E-BFMI across chains:  1.392   # Posterior inclusion probabilities summary(fit)$indicator #>                      mean         sd        mcse n0->0 n0->1 n1->0 #> intrusion-dreams  1.00000 0.00000000          NA     0     0     0 #> intrusion-flash   1.00000 0.00000000          NA     0     0     0 #> intrusion-upset   0.88675 0.31689815 0.033097148   435    18    18 #> intrusion-physior 0.94625 0.22552370 0.023709256   206     9     9 #> dreams-flash      1.00000 0.00000000          NA     0     0     0 #> dreams-upset      0.99850 0.03870078 0.001367047     4     2     2 #> dreams-physior    0.06700 0.25002200 0.008926280  3649    82    82 #> flash-upset       0.08275 0.27550397 0.010723912  3582    86    86 #> flash-physior     1.00000 0.00000000          NA     0     0     0 #> upset-physior     1.00000 0.00000000          NA     0     0     0 #>                   n1->1     n_eff     Rhat #> intrusion-dreams   3999        NA       NA #> intrusion-flash    3999        NA       NA #> intrusion-upset    3528  91.67655 1.024333 #> intrusion-physior  3775  90.47915 1.145775 #> dreams-flash       3999        NA       NA #> dreams-upset       3991 801.44296 1.293917 #> dreams-physior      186 784.54068 1.015340 #> flash-upset         245 660.00800 1.016598 #> flash-physior      3999        NA       NA #> upset-physior      3999        NA       NA  # Posterior pairwise effects summary(fit)$pairwise #>                          mean          sd        mcse     n_eff #> intrusion-dreams  0.630011559 0.001608864 0.066123967 1689.1933 #> intrusion-flash   0.338858635 0.001426958 0.061194884 1839.1102 #> intrusion-upset   0.182650623 0.082863156 0.006962362  141.6478 #> intrusion-physior 0.197786720 0.072082734 0.005180593  193.5992 #> dreams-flash      0.499269400 0.001282161 0.059751778 2171.7848 #> dreams-upset      0.231409344 0.055056569 0.002092234  692.4647 #> dreams-physior    0.006397386 0.024184302 0.000927634  679.6946 #> flash-upset       0.008209138 0.027710743 0.001128422  603.0501 #> flash-physior     0.306644868 0.001209639 0.053094538 1926.5846 #> upset-physior     0.710281824 0.001426547 0.059325674 1729.4699 #>                        Rhat #> intrusion-dreams  1.0031150 #> intrusion-flash   1.0009726 #> intrusion-upset   1.0076115 #> intrusion-physior 1.0122796 #> dreams-flash      1.0009953 #> dreams-upset      1.0028343 #> dreams-physior    1.0053788 #> flash-upset       1.0048742 #> flash-physior     1.0064246 #> upset-physior     0.9999516 # }"},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/reference/bgmCompare.html","id":null,"dir":"Reference","previous_headings":"","what":"Bayesian Estimation and Variable Selection for Group Differences in Markov Random Fields — bgmCompare","title":"Bayesian Estimation and Variable Selection for Group Differences in Markov Random Fields — bgmCompare","text":"bgmCompare function estimates group differences category threshold parameters (main effects) pairwise interactions (pairwise effects) Markov Random Field (MRF) binary ordinal variables. Groups can defined either supplying two separate datasets (x y) group membership vector. Optionally, Bayesian variable selection can applied identify differences across groups.","code":""},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/reference/bgmCompare.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bayesian Estimation and Variable Selection for Group Differences in Markov Random Fields — bgmCompare","text":"","code":"bgmCompare(   x,   y,   group_indicator,   difference_selection = TRUE,   variable_type = \"ordinal\",   baseline_category,   difference_scale = 1,   difference_prior = c(\"Bernoulli\", \"Beta-Bernoulli\"),   difference_probability = 0.5,   beta_bernoulli_alpha = 1,   beta_bernoulli_beta = 1,   pairwise_scale = 2.5,   main_alpha = 0.5,   main_beta = 0.5,   iter = 1000,   warmup = 1000,   na_action = c(\"listwise\", \"impute\"),   update_method = c(\"nuts\", \"adaptive-metropolis\", \"hamiltonian-mc\"),   target_accept,   hmc_num_leapfrogs = 100,   nuts_max_depth = 10,   learn_mass_matrix = FALSE,   chains = 4,   cores = parallel::detectCores(),   display_progress = c(\"per-chain\", \"total\", \"none\"),   seed = NULL )"},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/reference/bgmCompare.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bayesian Estimation and Variable Selection for Group Differences in Markov Random Fields — bgmCompare","text":"x data frame matrix binary ordinal responses Group 1. Variables coded nonnegative integers starting 0. ordinal variables, unused categories collapsed; Blume–Capel variables, categories retained. y Optional data frame matrix Group 2 (two-group designs). Must variables (columns) x. group_indicator Optional integer vector group memberships rows x (multi-group designs). Ignored y supplied. difference_selection Logical. TRUE, spike--slab priors applied difference parameters. Default: TRUE. variable_type Character vector specifying type variable: \"ordinal\" (default) \"blume-capel\". baseline_category Integer vector giving baseline category Blume–Capel variables. difference_scale Double. Scale Cauchy prior difference parameters. Default: 1. difference_prior Character. Prior difference inclusion: \"Bernoulli\" \"Beta-Bernoulli\". Default: \"Bernoulli\". difference_probability Numeric. Prior inclusion probability differences (Bernoulli prior). Default: 0.5. beta_bernoulli_alpha, beta_bernoulli_beta Doubles. Shape parameters Beta prior inclusion probabilities Beta–Bernoulli model. Defaults: 1. pairwise_scale Double. Scale Cauchy prior baseline pairwise interactions. Default: 2.5. main_alpha, main_beta Doubles. Shape parameters beta-prime prior baseline threshold parameters. Defaults: 0.5. iter Integer. Number post–warmup iterations per chain. Default: 1e3. warmup Integer. Number warmup iterations sampling. Default: 1e3. na_action Character. handle missing data: \"listwise\" (drop rows) \"impute\" (impute within Gibbs). Default: \"listwise\". update_method Character. Sampling algorithm: \"adaptive-metropolis\", \"hamiltonian-mc\", \"nuts\". Default: \"nuts\". target_accept Numeric 0 1. Target acceptance rate. Defaults: 0.44 (Metropolis), 0.65 (HMC), 0.60 (NUTS). hmc_num_leapfrogs Integer. Leapfrog steps HMC. Default: 100. nuts_max_depth Integer. Maximum tree depth NUTS. Default: 10. learn_mass_matrix Logical. TRUE, adapt mass matrix warmup (HMC/NUTS ). Default: FALSE. chains Integer. Number parallel chains. Default: 4. cores Integer. Number CPU cores. Default: parallel::detectCores(). display_progress Character. Controls progress reporting: \"per-chain\", \"total\", \"none\". Default: \"per-chain\". seed Optional integer. Random seed reproducibility.","code":""},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/reference/bgmCompare.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bayesian Estimation and Variable Selection for Group Differences in Markov Random Fields — bgmCompare","text":"list class \"bgmCompare\" containing posterior summaries, posterior mean matrices, raw MCMC samples: posterior_summary_main_baseline,     posterior_summary_pairwise_baseline: summaries baseline     thresholds pairwise interactions. posterior_summary_main_differences,     posterior_summary_pairwise_differences: summaries group     differences thresholds pairwise interactions. posterior_summary_indicator: summaries inclusion     indicators (difference_selection = TRUE). posterior_mean_main_baseline,     posterior_mean_pairwise_baseline: posterior mean matrices     (legacy style). raw_samples: list raw draws per chain main,     pairwise, indicator parameters. arguments: list function call arguments metadata. summary() method prints formatted summaries, coef() extracts posterior means, as_draws() converts raw samples posterior draws_df. NUTS diagnostics (tree depth, divergences, energy, E-BFMI) included fit$nuts_diag update_method = \"nuts\".","code":""},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/reference/bgmCompare.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bayesian Estimation and Variable Selection for Group Differences in Markov Random Fields — bgmCompare","text":"function extends ordinal MRF framework Marsman et al. (2025)  multiple groups. basic idea modeling, analyzing, testing group differences MRFs introduced Marsman et al. (2024) , two–group comparisons conducted using adaptive Metropolis sampling. present implementation generalizes approach two groups supports additional samplers (HMC NUTS) staged warmup adaptation. Key components model:","code":""},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/reference/bgmCompare.html","id":"pairwise-interactions","dir":"Reference","previous_headings":"","what":"Pairwise Interactions","title":"Bayesian Estimation and Variable Selection for Group Differences in Markov Random Fields — bgmCompare","text":"variables \\(\\) \\(j\\), group-specific interaction represented : $$\\theta_{ij}^{(g)} = \\phi_{ij} + \\delta_{ij}^{(g)},$$ \\(\\phi_{ij}\\) baseline effect \\(\\delta_{ij}^{(g)}\\) group differences constrained sum zero.","code":""},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/reference/bgmCompare.html","id":"ordinal-variables","dir":"Reference","previous_headings":"","what":"Ordinal Variables","title":"Bayesian Estimation and Variable Selection for Group Differences in Markov Random Fields — bgmCompare","text":"Regular ordinal variables: category thresholds decomposed baseline plus group differences category. Blume–Capel variables: category thresholds quadratic category index, linear quadratic terms split baseline plus group differences.","code":""},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/reference/bgmCompare.html","id":"variable-selection","dir":"Reference","previous_headings":"","what":"Variable Selection","title":"Bayesian Estimation and Variable Selection for Group Differences in Markov Random Fields — bgmCompare","text":"difference_selection = TRUE, spike--slab priors applied difference parameters: Bernoulli: fixed prior inclusion probability. Beta–Bernoulli: inclusion probability given Beta prior.","code":""},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/reference/bgmCompare.html","id":"sampling-algorithms-and-warmup","dir":"Reference","previous_headings":"","what":"Sampling Algorithms and Warmup","title":"Bayesian Estimation and Variable Selection for Group Differences in Markov Random Fields — bgmCompare","text":"Parameters updated within Gibbs framework, using sampling algorithms staged warmup scheme described bgm: Adaptive Metropolis–Hastings: componentwise random–walk     proposals Robbins–Monro adaptation proposal SDs. Hamiltonian Monte Carlo (HMC): joint updates fixed     leapfrog trajectories; step size optionally mass matrix     adapted warmup. –U–Turn Sampler (NUTS): adaptive HMC variant     dynamic trajectory lengths; warmup uses staged adaptation     schedule HMC. details staged adaptation schedule (fast–slow–fast phases), see bgm. addition, difference_selection = TRUE, updates inclusion indicators delayed late warmup. HMC/NUTS, appends two extra phases (Stage-3b Stage-3c), total number warmup iterations exceeds user-specified warmup. warmup, adaptation disabled: step size mass matrix fixed learned values, proposal SDs remain constant.","code":""},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/reference/bgmCompare.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Bayesian Estimation and Variable Selection for Group Differences in Markov Random Fields — bgmCompare","text":"Marsman M, van den Bergh D, Haslbeck JMB (2025). “Bayesian analysis ordinal Markov random field.” Psychometrika, 90, 146–-182. Marsman M, Waldorp LJ, Sekulovski N, Haslbeck JMB (2024). “Bayes factor tests group differences ordinal binary graphical models.” Retrieved https://osf.io/preprints/osf/f4pk9. OSF preprint.","code":""},{"path":[]},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/reference/bgmCompare.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bayesian Estimation and Variable Selection for Group Differences in Markov Random Fields — bgmCompare","text":"","code":"# \\dontrun{ # Run bgmCompare on subset of the Boredom dataset x = Boredom[Boredom$language == \"fr\", 2:6] y = Boredom[Boredom$language != \"fr\", 2:6]  fit <- bgmCompare(x, y) #> Chain 1 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 50/2200 (2.3%) #> Chain 2 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 52/2200 (2.4%) #> Chain 3 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 45/2200 (2.0%) #> Chain 4 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 42/2200 (1.9%) #> Total   (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 189/8800 (2.1%) #> Elapsed: 18s | ETA: 13m 40s #> Chain 1 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 100/2200 (4.5%) #> Chain 2 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 106/2200 (4.8%) #> Chain 3 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 94/2200 (4.3%) #> Chain 4 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 95/2200 (4.3%) #> Total   (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 395/8800 (4.5%) #> Elapsed: 43s | ETA: 15m 14s #> Chain 1 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 150/2200 (6.8%) #> Chain 2 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 156/2200 (7.1%) #> Chain 3 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 145/2200 (6.6%) #> Chain 4 (Warmup): ⦗━━╺━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 136/2200 (6.2%) #> Total   (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 587/8800 (6.7%) #> Elapsed: 1m 4s | ETA: 14m 55s #> Chain 1 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 200/2200 (9.1%) #> Chain 2 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 210/2200 (9.5%) #> Chain 3 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 198/2200 (9.0%) #> Chain 4 (Warmup): ⦗━━━╺━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 185/2200 (8.4%) #> Total   (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 793/8800 (9.0%) #> Elapsed: 1m 26s | ETA: 14m 28s #> Chain 1 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 250/2200 (11.4%) #> Chain 2 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 256/2200 (11.6%) #> Chain 3 (Warmup): ⦗━━━━╺━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 245/2200 (11.1%) #> Chain 4 (Warmup): ⦗━━━━╺━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 224/2200 (10.2%) #> Total   (Warmup): ⦗━━━━╺━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 975/8800 (11.1%) #> Elapsed: 1m 46s | ETA: 14m 10s #> Chain 1 (Warmup): ⦗━━━━━╺━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 300/2200 (13.6%) #> Chain 2 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 303/2200 (13.8%) #> Chain 3 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 306/2200 (13.9%) #> Chain 4 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 274/2200 (12.5%) #> Total   (Warmup): ⦗━━━━━╺━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1183/8800 (13.4%) #> Elapsed: 2m 7s | ETA: 13m 37s #> Chain 1 (Warmup): ⦗━━━━━━╺━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 350/2200 (15.9%) #> Chain 2 (Warmup): ⦗━━━━━━╺━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 350/2200 (15.9%) #> Chain 3 (Warmup): ⦗━━━━━━╺━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 356/2200 (16.2%) #> Chain 4 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 319/2200 (14.5%) #> Total   (Warmup): ⦗━━━━━━╺━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1375/8800 (15.6%) #> Elapsed: 2m 25s | ETA: 13m 3s #> Chain 1 (Warmup): ⦗━━━━━━━╺━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 400/2200 (18.2%) #> Chain 2 (Warmup): ⦗━━━━━━━╺━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 401/2200 (18.2%) #> Chain 3 (Warmup): ⦗━━━━━━━╺━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 403/2200 (18.3%) #> Chain 4 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 360/2200 (16.4%) #> Total   (Warmup): ⦗━━━━━━━╺━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1564/8800 (17.8%) #> Elapsed: 2m 44s | ETA: 12m 38s #> Chain 1 (Warmup): ⦗━━━━━━━━╺━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 450/2200 (20.5%) #> Chain 2 (Warmup): ⦗━━━━━━━━╺━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 446/2200 (20.3%) #> Chain 3 (Warmup): ⦗━━━━━━━━╺━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 460/2200 (20.9%) #> Chain 4 (Warmup): ⦗━━━━━━━╺━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 410/2200 (18.6%) #> Total   (Warmup): ⦗━━━━━━━━╺━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1766/8800 (20.1%) #> Elapsed: 3m 6s | ETA: 12m 20s #> Chain 1 (Warmup): ⦗━━━━━━━━━╺━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 500/2200 (22.7%) #> Chain 2 (Warmup): ⦗━━━━━━━━━╺━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 498/2200 (22.6%) #> Chain 3 (Warmup): ⦗━━━━━━━━━╺━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 514/2200 (23.4%) #> Chain 4 (Warmup): ⦗━━━━━━━━╺━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 462/2200 (21.0%) #> Total   (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1974/8800 (22.4%) #> Elapsed: 3m 26s | ETA: 11m 52s #> Chain 1 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 550/2200 (25.0%) #> Chain 2 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 539/2200 (24.5%) #> Chain 3 (Warmup): ⦗━━━━━━━━━━╺━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 564/2200 (25.6%) #> Chain 4 (Warmup): ⦗━━━━━━━━━╺━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 505/2200 (23.0%) #> Total   (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 2158/8800 (24.5%) #> Elapsed: 3m 44s | ETA: 11m 29s #> Chain 1 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 600/2200 (27.3%) #> Chain 2 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 584/2200 (26.5%) #> Chain 3 (Warmup): ⦗━━━━━━━━━━━╺━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 611/2200 (27.8%) #> Chain 4 (Warmup): ⦗━━━━━━━━━━╺━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 558/2200 (25.4%) #> Total   (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 2353/8800 (26.7%) #> Elapsed: 4m 3s | ETA: 11m 5s #> Chain 1 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 650/2200 (29.5%) #> Chain 2 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 648/2200 (29.5%) #> Chain 3 (Warmup): ⦗━━━━━━━━━━━━╺━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 669/2200 (30.4%) #> Chain 4 (Warmup): ⦗━━━━━━━━━━━╺━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 613/2200 (27.9%) #> Total   (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 2580/8800 (29.3%) #> Elapsed: 4m 25s | ETA: 10m 38s #> Chain 1 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 700/2200 (31.8%) #> Chain 2 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 698/2200 (31.7%) #> Chain 3 (Warmup): ⦗━━━━━━━━━━━━━╺━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 723/2200 (32.9%) #> Chain 4 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 659/2200 (30.0%) #> Total   (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 2780/8800 (31.6%) #> Elapsed: 4m 47s | ETA: 10m 21s #> Chain 1 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 750/2200 (34.1%) #> Chain 2 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 745/2200 (33.9%) #> Chain 3 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 769/2200 (35.0%) #> Chain 4 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 707/2200 (32.1%) #> Total   (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 2971/8800 (33.8%) #> Elapsed: 5m 6s | ETA: 10m #> Chain 1 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 800/2200 (36.4%) #> Chain 2 (Warmup): ⦗━━━━━━━━━━━━━━╺━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 793/2200 (36.0%) #> Chain 3 (Warmup): ⦗━━━━━━━━━━━━━━━╺━━━━━━━━━━━━━━━━━━━━━━━━⦘ 828/2200 (37.6%) #> Chain 4 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 763/2200 (34.7%) #> Total   (Warmup): ⦗━━━━━━━━━━━━━━╺━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 3184/8800 (36.2%) #> Elapsed: 5m 28s | ETA: 9m 38s #> Chain 1 (Warmup): ⦗━━━━━━━━━━━━━━━╺━━━━━━━━━━━━━━━━━━━━━━━━⦘ 850/2200 (38.6%) #> Chain 2 (Warmup): ⦗━━━━━━━━━━━━━━━╺━━━━━━━━━━━━━━━━━━━━━━━━⦘ 847/2200 (38.5%) #> Chain 3 (Warmup): ⦗━━━━━━━━━━━━━━━━╺━━━━━━━━━━━━━━━━━━━━━━━⦘ 881/2200 (40.0%) #> Chain 4 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 812/2200 (36.9%) #> Total   (Warmup): ⦗━━━━━━━━━━━━━━━╺━━━━━━━━━━━━━━━━━━━━━━━━⦘ 3390/8800 (38.5%) #> Elapsed: 5m 50s | ETA: 9m 18s #> Chain 1 (Warmup): ⦗━━━━━━━━━━━━━━━━╺━━━━━━━━━━━━━━━━━━━━━━━⦘ 900/2200 (40.9%) #> Chain 2 (Warmup): ⦗━━━━━━━━━━━━━━━━╺━━━━━━━━━━━━━━━━━━━━━━━⦘ 897/2200 (40.8%) #> Chain 3 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 926/2200 (42.1%) #> Chain 4 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 857/2200 (39.0%) #> Total   (Warmup): ⦗━━━━━━━━━━━━━━━━╺━━━━━━━━━━━━━━━━━━━━━━━⦘ 3580/8800 (40.7%) #> Elapsed: 6m 9s | ETA: 8m 58s #> Chain 1 (Warmup): ⦗━━━━━━━━━━━━━━━━━╺━━━━━━━━━━━━━━━━━━━━━━⦘ 950/2200 (43.2%) #> Chain 2 (Warmup): ⦗━━━━━━━━━━━━━━━━━╺━━━━━━━━━━━━━━━━━━━━━━⦘ 951/2200 (43.2%) #> Chain 3 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 975/2200 (44.3%) #> Chain 4 (Warmup): ⦗━━━━━━━━━━━━━━━━╺━━━━━━━━━━━━━━━━━━━━━━━⦘ 903/2200 (41.0%) #> Total   (Warmup): ⦗━━━━━━━━━━━━━━━━━╺━━━━━━━━━━━━━━━━━━━━━━⦘ 3779/8800 (42.9%) #> Elapsed: 6m 29s | ETA: 8m 36s #> Chain 1 (Warmup): ⦗━━━━━━━━━━━━━━━━━━╺━━━━━━━━━━━━━━━━━━━━━⦘ 1000/2200 (45.5%) #> Chain 2 (Warmup): ⦗━━━━━━━━━━━━━━━━━━╺━━━━━━━━━━━━━━━━━━━━━⦘ 995/2200 (45.2%) #> Chain 3 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1018/2200 (46.3%) #> Chain 4 (Warmup): ⦗━━━━━━━━━━━━━━━━━╺━━━━━━━━━━━━━━━━━━━━━━⦘ 948/2200 (43.1%) #> Total   (Warmup): ⦗━━━━━━━━━━━━━━━━━━╺━━━━━━━━━━━━━━━━━━━━━⦘ 3961/8800 (45.0%) #> Elapsed: 6m 48s | ETA: 8m 18s #> Chain 1 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━╺━━━━━━━━━━━━━━━━━━━━⦘ 1050/2200 (47.7%) #> Chain 2 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━╺━━━━━━━━━━━━━━━━━━━━⦘ 1052/2200 (47.8%) #> Chain 3 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━╺━━━━━━━━━━━━━━━━━━━━⦘ 1071/2200 (48.7%) #> Chain 4 (Warmup): ⦗━━━━━━━━━━━━━━━━━━╺━━━━━━━━━━━━━━━━━━━━━⦘ 1007/2200 (45.8%) #> Total   (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 4180/8800 (47.5%) #> Elapsed: 7m 12s | ETA: 7m 57s #> Chain 1 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1100/2200 (50.0%) #> Chain 2 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━╺━━━━━━━━━━━━━━━━━━━⦘ 1102/2200 (50.1%) #> Chain 3 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1146/2200 (52.1%) #> Chain 4 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━╺━━━━━━━━━━━━━━━━━━━━⦘ 1054/2200 (47.9%) #> Total   (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━╺━━━━━━━━━━━━━━━━━━━⦘ 4402/8800 (50.0%) #> Elapsed: 7m 33s | ETA: 7m 32s #> Chain 1 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1150/2200 (52.3%) #> Chain 2 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1139/2200 (51.8%) #> Chain 3 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1188/2200 (54.0%) #> Chain 4 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━╺━━━━━━━━━━━━━━━━━━━━⦘ 1072/2200 (48.7%) #> Total   (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 4549/8800 (51.7%) #> Elapsed: 7m 41s | ETA: 7m 10s #> Chain 1 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1200/2200 (54.5%) #> Chain 2 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1193/2200 (54.2%) #> Chain 3 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1240/2200 (56.4%) #> Chain 4 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1099/2200 (50.0%) #> Total   (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 4732/8800 (53.8%) #> Elapsed: 7m 52s | ETA: 6m 45s #> Chain 1 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1250/2200 (56.8%) #> Chain 2 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1251/2200 (56.9%) #> Chain 3 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1293/2200 (58.8%) #> Chain 4 (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1146/2200 (52.1%) #> Total   (Warmup): ⦗━━━━━━━━━━━━━━━━━━━━━━╺━━━━━━━━━━━━━━━━━⦘ 4940/8800 (56.1%) #> Elapsed: 8m 4s | ETA: 6m 18s #> Chain 1 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1300/2200 (59.1%) #> Chain 2 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1296/2200 (58.9%) #> Chain 3 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━╺━━━━━━━━━━━━━━━⦘ 1339/2200 (60.9%) #> Chain 4 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1207/2200 (54.9%) #> Total   (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━╺━━━━━━━━━━━━━━━━⦘ 5142/8800 (58.4%) #> Elapsed: 8m 15s | ETA: 5m 52s #> Chain 1 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1350/2200 (61.4%) #> Chain 2 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1348/2200 (61.3%) #> Chain 3 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━╺━━━━━━━━━━━━━━⦘ 1385/2200 (63.0%) #> Chain 4 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1260/2200 (57.3%) #> Total   (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━╺━━━━━━━━━━━━━━━⦘ 5343/8800 (60.7%) #> Elapsed: 8m 28s | ETA: 5m 28s #> Chain 1 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━╺━━━━━━━━━━━━━━⦘ 1400/2200 (63.6%) #> Chain 2 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━╺━━━━━━━━━━━━━━⦘ 1393/2200 (63.3%) #> Chain 3 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1424/2200 (64.7%) #> Chain 4 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1295/2200 (58.9%) #> Total   (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━╺━━━━━━━━━━━━━━⦘ 5512/8800 (62.6%) #> Elapsed: 8m 39s | ETA: 5m 9s #> Chain 1 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━╺━━━━━━━━━━━━━⦘ 1450/2200 (65.9%) #> Chain 2 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━╺━━━━━━━━━━━━━⦘ 1442/2200 (65.5%) #> Chain 3 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1468/2200 (66.7%) #> Chain 4 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━╺━━━━━━━━━━━━━━━⦘ 1338/2200 (60.8%) #> Total   (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 5698/8800 (64.8%) #> Elapsed: 8m 51s | ETA: 4m 49s #> Chain 1 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━╺━━━━━━━━━━━━⦘ 1500/2200 (68.2%) #> Chain 2 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1484/2200 (67.5%) #> Chain 3 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1515/2200 (68.9%) #> Chain 4 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━╺━━━━━━━━━━━━━━⦘ 1382/2200 (62.8%) #> Total   (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 5881/8800 (66.8%) #> Elapsed: 9m 2s | ETA: 4m 29s #> Chain 1 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━╺━━━━━━━━━━━⦘ 1550/2200 (70.5%) #> Chain 2 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1529/2200 (69.5%) #> Chain 3 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━╺━━━━━━━━━━━⦘ 1563/2200 (71.0%) #> Chain 4 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1427/2200 (64.9%) #> Total   (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 6069/8800 (69.0%) #> Elapsed: 9m 13s | ETA: 4m 8s #> Chain 1 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╺━━━━━━━━━━⦘ 1600/2200 (72.7%) #> Chain 2 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1579/2200 (71.8%) #> Chain 3 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╺━━━━━━━━━━⦘ 1621/2200 (73.7%) #> Chain 4 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1472/2200 (66.9%) #> Total   (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 6272/8800 (71.3%) #> Elapsed: 9m 26s | ETA: 3m 48s #> Chain 1 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1650/2200 (75.0%) #> Chain 2 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1628/2200 (74.0%) #> Chain 3 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╺━━━━━━━━━⦘ 1671/2200 (76.0%) #> Chain 4 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1532/2200 (69.6%) #> Total   (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╺━━━━━━━━━━⦘ 6481/8800 (73.6%) #> Elapsed: 9m 38s | ETA: 3m 26s #> Chain 1 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1700/2200 (77.3%) #> Chain 2 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╺━━━━━━━━━⦘ 1665/2200 (75.7%) #> Chain 3 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╺━━━━━━━━⦘ 1723/2200 (78.3%) #> Chain 4 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1577/2200 (71.7%) #> Total   (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╺━━━━━━━━━⦘ 6665/8800 (75.7%) #> Elapsed: 9m 50s | ETA: 3m 8s #> Chain 1 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1750/2200 (79.5%) #> Chain 2 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╺━━━━━━━━⦘ 1707/2200 (77.6%) #> Chain 3 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╺━━━━━━━⦘ 1765/2200 (80.2%) #> Chain 4 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1633/2200 (74.2%) #> Total   (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╺━━━━━━━━⦘ 6855/8800 (77.9%) #> Elapsed: 10m 2s | ETA: 2m 50s #> Chain 1 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1800/2200 (81.8%) #> Chain 2 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1750/2200 (79.5%) #> Chain 3 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1807/2200 (82.1%) #> Chain 4 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╺━━━━━━━━━⦘ 1673/2200 (76.0%) #> Total   (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 7030/8800 (79.9%) #> Elapsed: 10m 13s | ETA: 2m 34s #> Chain 1 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1850/2200 (84.1%) #> Chain 2 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1792/2200 (81.5%) #> Chain 3 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1851/2200 (84.1%) #> Chain 4 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╺━━━━━━━━⦘ 1719/2200 (78.1%) #> Total   (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 7212/8800 (82.0%) #> Elapsed: 10m 25s | ETA: 2m 17s #> Chain 1 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1900/2200 (86.4%) #> Chain 2 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1843/2200 (83.8%) #> Chain 3 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1903/2200 (86.5%) #> Chain 4 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╺━━━━━━━⦘ 1767/2200 (80.3%) #> Total   (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 7413/8800 (84.2%) #> Elapsed: 10m 38s | ETA: 1m 59s #> Chain 1 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╺━━━━⦘ 1950/2200 (88.6%) #> Chain 2 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╺━━━━━⦘ 1886/2200 (85.7%) #> Chain 3 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1957/2200 (89.0%) #> Chain 4 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╺━━━━━━⦘ 1818/2200 (82.6%) #> Total   (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 7611/8800 (86.5%) #> Elapsed: 10m 50s | ETA: 1m 41s #> Chain 1 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╺━━━⦘ 2000/2200 (90.9%) #> Chain 2 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╺━━━━⦘ 1932/2200 (87.8%) #> Chain 3 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╺━━━⦘ 2005/2200 (91.1%) #> Chain 4 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1861/2200 (84.6%) #> Total   (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╺━━━━⦘ 7798/8800 (88.6%) #> Elapsed: 11m 2s | ETA: 1m 25s #> Chain 1 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╺━━⦘ 2050/2200 (93.2%) #> Chain 2 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1969/2200 (89.5%) #> Chain 3 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╺━━⦘ 2047/2200 (93.0%) #> Chain 4 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1899/2200 (86.3%) #> Total   (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╺━━━⦘ 7965/8800 (90.5%) #> Elapsed: 11m 12s | ETA: 1m 10s #> Chain 1 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╺━⦘ 2100/2200 (95.5%) #> Chain 2 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 2023/2200 (92.0%) #> Chain 3 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╺━⦘ 2099/2200 (95.4%) #> Chain 4 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 1953/2200 (88.8%) #> Total   (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╺━━⦘ 8175/8800 (92.9%) #> Elapsed: 11m 24s | ETA: 52s #> Chain 1 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╺⦘ 2150/2200 (97.7%) #> Chain 2 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 2083/2200 (94.7%) #> Chain 3 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╺⦘ 2160/2200 (98.2%) #> Chain 4 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 2009/2200 (91.3%) #> Total   (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╺━⦘ 8402/8800 (95.5%) #> Elapsed: 11m 38s | ETA: 33s #> Chain 1 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 2200/2200 (100.0%) #> Chain 2 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 2127/2200 (96.7%) #> Chain 3 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 2200/2200 (100.0%) #> Chain 4 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╺━━⦘ 2050/2200 (93.2%) #> Total   (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 8577/8800 (97.5%) #> Elapsed: 11m 49s | ETA: 18s #> Chain 1 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 2200/2200 (100.0%) #> Chain 2 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 2200/2200 (100.0%) #> Chain 3 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 2200/2200 (100.0%) #> Chain 4 (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 2200/2200 (100.0%) #> Total   (Sampling): ⦗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━⦘ 8800/8800 (100.0%) #> Elapsed: 12m 15s | ETA: 0s #> NUTS Diagnostics Summary: #>   Total divergences:         1  #>   Max tree depth hits:       2  #>   Min E-BFMI across chains:  1.443  #> Note: 0.025% of transitions ended with a divergence (1 of 4000). #> Check R-hat and effective sample size (ESS) to ensure the chains are #> mixing well. #> Note: 0.05% of transitions hit the maximum tree depth (2 of 4000). #> Check efficiency metrics such as effective sample size (ESS) to ensure #> sufficient exploration of the posterior.  # Posterior inclusion probabilities summary(fit)$indicator #>                            parameter    mean         sd         mcse #> 1                  loose_ends (main) 0.00375 0.06112232 0.0011799230 #> 2    loose_ends-entertain (pairwise) 0.02075 0.14254626 0.0023179154 #> 3   loose_ends-repetitive (pairwise) 0.48200 0.49967589 0.0204434162 #> 4  loose_ends-stimulation (pairwise) 0.04450 0.20620318 0.0035634125 #> 5    loose_ends-motivated (pairwise) 0.02650 0.16061678 0.0028596087 #> 6                   entertain (main) 0.00225 0.04738077 0.0007474679 #> 7    entertain-repetitive (pairwise) 0.12925 0.33547643 0.0084382074 #> 8   entertain-stimulation (pairwise) 0.06725 0.25045446 0.0043571496 #> 9     entertain-motivated (pairwise) 0.12325 0.32872395 0.0080801576 #> 10                 repetitive (main) 0.05050 0.21897431 0.0143867659 #> 11 repetitive-stimulation (pairwise) 0.02525 0.15688352 0.0025173311 #> 12   repetitive-motivated (pairwise) 0.38150 0.48575482 0.0175760052 #> 13                stimulation (main) 0.00550 0.07395776 0.0017048695 #> 14  stimulation-motivated (pairwise) 0.01700 0.12927103 0.0020699185 #> 15                  motivated (main) 0.00775 0.08769229 0.0022437864 #>    n0->0 n0->1 n1->0 n1->1     n_eff      Rhat #> 1   3972    12    12     3 2683.4424 1.0564965 #> 2   3837    79    79     4 3781.9564 1.0089183 #> 3   1812   260   259  1668  597.4064 1.0033782 #> 4   3666   155   155    23 3348.5632 1.0039236 #> 5   3802    91    91    15 3154.7766 0.9998207 #> 6   3981     9     9     0 4018.0859 1.0367105 #> 7   3227   255   255   262 1580.6061 1.0044972 #> 8   3503   227   227    42 3304.0956 1.0122142 #> 9   3253   253   253   240 1655.0954 1.0015726 #> 10  3776    21    21   181  231.6648 1.0311322 #> 11  3801    97    97     4 3883.9529 1.0022167 #> 12  2171   302   303  1223  763.8251 1.0029975 #> 13  3963    14    14     8 1881.8507 1.0932906 #> 14  3865    66    66     2 3900.2815 1.0013133 #> 15  3951    17    17    14 1527.4247 1.0220167  # Bayesian model averaged main effects for the groups coef(fit)$main_effects_groups #>                      group1      group2 #> loose_ends(c1)   -0.9353440  -0.9351625 #> loose_ends(c2)   -2.5141982  -2.5121105 #> loose_ends(c3)   -3.7945398  -3.7929735 #> loose_ends(c4)   -5.0769986  -5.0749017 #> loose_ends(c5)   -7.5986279  -7.5974093 #> loose_ends(c6)  -10.0913984 -10.0912938 #> entertain(c1)    -0.8700553  -0.8706652 #> entertain(c2)    -2.2450230  -2.2451279 #> entertain(c3)    -3.8161694  -3.8152446 #> entertain(c4)    -5.1660351  -5.1659826 #> entertain(c5)    -7.0365473  -7.0360373 #> entertain(c6)    -9.5601292  -9.5594079 #> repetitive(c1)   -0.1306853  -0.1427149 #> repetitive(c2)   -0.6470947  -0.6691630 #> repetitive(c3)   -1.0768739  -1.0839598 #> repetitive(c4)   -1.8635360  -1.8528478 #> repetitive(c5)   -3.2553154  -3.2270590 #> repetitive(c6)   -5.0341261  -5.0040965 #> stimulation(c1)  -0.5423682  -0.5453999 #> stimulation(c2)  -1.7836985  -1.7845098 #> stimulation(c3)  -2.5267104  -2.5282495 #> stimulation(c4)  -3.6100086  -3.6123228 #> stimulation(c5)  -5.0923482  -5.0937825 #> stimulation(c6)  -7.0603515  -7.0636383 #> motivated(c1)    -0.5578073  -0.5593893 #> motivated(c2)    -1.8068364  -1.8081033 #> motivated(c3)    -3.2970788  -3.2954189 #> motivated(c4)    -4.7950208  -4.7915124 #> motivated(c5)    -6.7875174  -6.7887137 #> motivated(c6)    -9.1610894  -9.1585315  # Bayesian model averaged pairwise effects for the groups coef(fit)$pairwise_effects_groups #>                            group1     group2 #> loose_ends-entertain   0.16903721 0.16935970 #> loose_ends-repetitive  0.04742411 0.06785977 #> loose_ends-stimulation 0.12595349 0.12696288 #> loose_ends-motivated   0.14116195 0.14078460 #> entertain-repetitive   0.06463489 0.06878973 #> entertain-stimulation  0.10831178 0.11012235 #> entertain-motivated    0.08437309 0.08848879 #> repetitive-stimulation 0.05580408 0.05626986 #> repetitive-motivated   0.12995718 0.14495026 #> stimulation-motivated  0.10799825 0.10809168 # }"},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/reference/bgms-package.html","id":null,"dir":"Reference","previous_headings":"","what":"bgms: Bayesian Analysis of Networks of Binary and/or Ordinal Variables — bgms-package","title":"bgms: Bayesian Analysis of Networks of Binary and/or Ordinal Variables — bgms-package","text":"R package bgms provides tools Bayesian analysis ordinal Markov random field (MRF), graphical model describing networks binary /ordinal variables (Marsman et al. 2025) . likelihood approximated via pseudolikelihood, Markov chain Monte Carlo (MCMC) methods used sample corresponding pseudoposterior distribution model parameters. main entry points : bgm: estimation one-sample design. bgmCompare: estimation group comparison         independent-sample design. functions support Bayesian effect selection spike--slab priors. one-sample designs, bgm models presence absence   edges variables. Posterior inclusion probabilities quantify   plausibility edge can converted Bayes factors   conditional independence tests. bgm can also model communities (clusters) variables.   posterior distribution number clusters provides evidence   clustering (Sekulovski et al. 2025) . independent-sample designs, bgmCompare estimates group   differences edge weights category thresholds. Posterior inclusion   probabilities quantify evidence differences can converted   Bayes factors parameter equivalence tests   (Marsman et al. 2024) .","code":""},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/reference/bgms-package.html","id":"tools","dir":"Reference","previous_headings":"","what":"Tools","title":"bgms: Bayesian Analysis of Networks of Binary and/or Ordinal Variables — bgms-package","text":"package also provides: Simulation response data MRFs Gibbs sampler         (mrfSampler). Posterior estimation edge selection one-sample designs         (bgm). Posterior estimation group-difference selection         independent-sample designs (bgmCompare).","code":""},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/reference/bgms-package.html","id":"vignettes","dir":"Reference","previous_headings":"","what":"Vignettes","title":"bgms: Bayesian Analysis of Networks of Binary and/or Ordinal Variables — bgms-package","text":"tutorials worked examples, see: vignette(\"intro\", package = \"bgms\") — Getting started. vignette(\"comparison\", package = \"bgms\") — Model comparison. vignette(\"diagnostics\", package = \"bgms\") — Diagnostics         spike--slab summaries.","code":""},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/reference/bgms-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"bgms: Bayesian Analysis of Networks of Binary and/or Ordinal Variables — bgms-package","text":"Marsman M, van den Bergh D, Haslbeck JMB (2025). “Bayesian analysis ordinal Markov random field.” Psychometrika, 90, 146–-182. Marsman M, Waldorp LJ, Sekulovski N, Haslbeck JMB (2024). “Bayes factor tests group differences ordinal binary graphical models.” Retrieved https://osf.io/preprints/osf/f4pk9. OSF preprint. Sekulovski N, Arena G, Haslbeck JMB, Huth KBS, Friel N, Marsman M (2025). “Stochastic Block Prior Clustering Graphical Models.” Retrieved https://osf.io/preprints/psyarxiv/29p3m_v1. OSF preprint.","code":""},{"path":[]},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/reference/bgms-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"bgms: Bayesian Analysis of Networks of Binary and/or Ordinal Variables — bgms-package","text":"Maintainer: Maarten Marsman m.marsman@uva.nl (ORCID) contributors: Giuseppe Arena (ORCID) [contributor] Karoline Huth (ORCID) [contributor] Nikola Sekulovski (ORCID) [contributor] Don van den Bergh (ORCID) [contributor]","code":""},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/reference/coef.bgmCompare.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Coefficients from a bgmCompare Object — coef.bgmCompare","title":"Extract Coefficients from a bgmCompare Object — coef.bgmCompare","text":"Returns posterior means raw parameters (baseline + differences) group-specific effects bgmCompare fit, well inclusion indicators.","code":""},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/reference/coef.bgmCompare.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Coefficients from a bgmCompare Object — coef.bgmCompare","text":"","code":"# S3 method for class 'bgmCompare' coef(object, ...)"},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/reference/coef.bgmCompare.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Coefficients from a bgmCompare Object — coef.bgmCompare","text":"object object class bgmCompare. ... Ignored.","code":""},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/reference/coef.bgmCompare.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Coefficients from a bgmCompare Object — coef.bgmCompare","text":"list components: main_effects_raw Posterior means raw main-effect parameters   (variables x [baseline + differences]). pairwise_effects_raw Posterior means raw pairwise-effect parameters   (pairs x [baseline + differences]). main_effects_groups Posterior means group-specific main effects   (variables x groups), computed baseline plus projected differences. pairwise_effects_groups Posterior means group-specific pairwise effects   (pairs x groups), computed baseline plus projected differences. indicators Posterior mean inclusion probabilities symmetric matrix,   diagonals corresponding main effects -diagonals pairwise effects.","code":""},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/reference/coef.bgms.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Coefficients from a bgms Object — coef.bgms","title":"Extract Coefficients from a bgms Object — coef.bgms","text":"Returns posterior mean thresholds, pairwise effects, edge inclusion indicators bgms model fit.","code":""},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/reference/coef.bgms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Coefficients from a bgms Object — coef.bgms","text":"","code":"# S3 method for class 'bgms' coef(object, ...)"},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/reference/coef.bgms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Coefficients from a bgms Object — coef.bgms","text":"object object class bgms. ... Ignored.","code":""},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/reference/coef.bgms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Coefficients from a bgms Object — coef.bgms","text":"list following components: main Posterior mean category threshold parameters. pairwise Posterior mean pairwise interaction matrix. indicator Posterior mean edge inclusion indicators (available).","code":""},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/reference/extractor_functions.html","id":null,"dir":"Reference","previous_headings":"","what":"Extractor Functions for bgms Objects — extractor_functions","title":"Extractor Functions for bgms Objects — extractor_functions","text":"Extractor Functions bgms Objects","code":""},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/reference/extractor_functions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extractor Functions for bgms Objects — extractor_functions","text":"","code":"extract_arguments(bgms_object)  # S3 method for class 'bgms' extract_arguments(bgms_object)  # S3 method for class 'bgmCompare' extract_arguments(bgms_object)  extract_indicators(bgms_object)  # S3 method for class 'bgms' extract_indicators(bgms_object)  # S3 method for class 'bgmCompare' extract_indicators(bgms_object)  extract_posterior_inclusion_probabilities(bgms_object)  # S3 method for class 'bgms' extract_posterior_inclusion_probabilities(bgms_object)  # S3 method for class 'bgmCompare' extract_posterior_inclusion_probabilities(bgms_object)  extract_indicator_priors(bgms_object)  # S3 method for class 'bgms' extract_indicator_priors(bgms_object)  # S3 method for class 'bgmCompare' extract_indicator_priors(bgms_object)  extract_pairwise_interactions(bgms_object)  # S3 method for class 'bgms' extract_pairwise_interactions(bgms_object)  extract_category_thresholds(bgms_object)  # S3 method for class 'bgms' extract_category_thresholds(bgms_object)  extract_pairwise_difference.bgmCompare(bgms_object)  extract_main_difference.bgmCompare(bgms_object)  extract_edge_indicators(bgms_object)  extract_pairwise_thresholds(bgms_object)"},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/reference/extractor_functions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extractor Functions for bgms Objects — extractor_functions","text":"functions extract various components objects returned `bgm()` function, edge indicators, posterior inclusion probabilities, parameter summaries.","code":""},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/reference/extractor_functions.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Extractor Functions for bgms Objects — extractor_functions","text":"- `extract_arguments()` – Extract model arguments - `extract_indicators()` – Get sampled edge indicators - `extract_posterior_inclusion_probabilities()` – Posterior edge inclusion probabilities - `extract_pairwise_interactions()` – Posterior mean pairwise interactions - `extract_category_thresholds()` – Posterior mean category thresholds - `extract_indicator_priors()` – Prior structure used edge indicators","code":""},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/reference/mrfSampler.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample observations from the ordinal MRF — mrfSampler","title":"Sample observations from the ordinal MRF — mrfSampler","text":"function samples states ordinal MRF using Gibbs sampler. Gibbs sampler initiated random values response options, proceeds simulating states variable logistic model using variable states predictor variables.","code":""},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/reference/mrfSampler.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample observations from the ordinal MRF — mrfSampler","text":"","code":"mrfSampler(   no_states,   no_variables,   no_categories,   interactions,   thresholds,   variable_type = \"ordinal\",   reference_category,   iter = 1000 )"},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/reference/mrfSampler.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample observations from the ordinal MRF — mrfSampler","text":"no_states number states ordinal MRF generated. no_variables number variables ordinal MRF. no_categories Either positive integer vector positive integers length no_variables. number response categories top base category: no_categories = 1 generates binary states. interactions symmetric no_variables no_variables matrix pairwise interactions. -diagonal elements used. thresholds no_variables max(no_categories) matrix category thresholds. elements row indicate thresholds variable . no_categories vector, first no_categories[] elements used row . Blume-Capel model used category thresholds variable , row requires two values (details ); first \\(\\alpha\\), linear contribution Blume-Capel model second \\(\\beta\\), quadratic contribution. variable_type kind variables simulated? Can single character string specifying variable type p variables vector character strings length p specifying type variable separately. Currently, bgm supports “ordinal” “blume-capel”. Binary variables automatically treated “ordinal’’. Defaults variable_type = \"ordinal\". reference_category integer vector length no_variables specifying reference_category category used Blume-Capel model (details ). Can integer value 0 no_categories (no_categories[]). iter number iterations used Gibbs sampler. function provides last state Gibbs sampler output. default set 1e3.","code":""},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/reference/mrfSampler.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample observations from the ordinal MRF — mrfSampler","text":"no_states no_variables matrix simulated states ordinal MRF.","code":""},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/reference/mrfSampler.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sample observations from the ordinal MRF — mrfSampler","text":"two modeling options category thresholds. default option assumes category thresholds free, except first threshold set zero identification. user needs specify thresholds remaining response categories. option useful type ordinal variable gives user freedom specifying model. Blume-Capel option specifically designed ordinal variables special type reference_category category, neutral category Likert scale. Blume-Capel model specifies following quadratic model threshold parameters: $$\\mu_{\\text{c}} = \\alpha \\times \\text{c} + \\beta \\times (\\text{c} - \\text{r})^2,$$ \\(\\mu_{\\text{c}}\\) threshold category c (now includes zero), \\(\\alpha\\) offers linear trend across categories (increasing threshold values \\(\\alpha > 0\\) decreasing threshold values \\(\\alpha <0\\)), \\(\\beta < 0\\), offers increasing penalty responding category away reference_category category r, \\(\\beta > 0\\) suggests preference responding reference_category category.","code":""},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/reference/mrfSampler.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample observations from the ordinal MRF — mrfSampler","text":"","code":"# Generate responses from a network of five binary and ordinal variables. no_variables = 5 no_categories = sample(1:5, size = no_variables, replace = TRUE)  Interactions = matrix(0, nrow = no_variables, ncol = no_variables) Interactions[2, 1] = Interactions[4, 1] = Interactions[3, 2] =   Interactions[5, 2] = Interactions[5, 4] = .25 Interactions = Interactions + t(Interactions) Thresholds = matrix(0, nrow = no_variables, ncol = max(no_categories))  x = mrfSampler(no_states = 1e3,                no_variables = no_variables,                no_categories = no_categories,                interactions = Interactions,                thresholds = Thresholds) #> Warning: The matrix ``thresholds'' contains numeric values for variable 1 for category  #> (categories, i.e., columns) exceding the maximum of 1. These values will  #> be ignored. #> Warning: The matrix ``thresholds'' contains numeric values for variable 5 for category  #> (categories, i.e., columns) exceding the maximum of 2. These values will  #> be ignored.  # Generate responses from a network of 2 ordinal and 3 Blume-Capel variables. no_variables = 5 no_categories = 4  Interactions = matrix(0, nrow = no_variables, ncol = no_variables) Interactions[2, 1] = Interactions[4, 1] = Interactions[3, 2] =   Interactions[5, 2] = Interactions[5, 4] = .25 Interactions = Interactions + t(Interactions)  Thresholds = matrix(NA, no_variables, no_categories) Thresholds[, 1] = -1 Thresholds[, 2] = -1 Thresholds[3, ] = sort(-abs(rnorm(4)), decreasing = TRUE) Thresholds[5, ] = sort(-abs(rnorm(4)), decreasing = TRUE)  x = mrfSampler(no_states = 1e3,                no_variables = no_variables,                no_categories = no_categories,                interactions = Interactions,                thresholds = Thresholds,                variable_type = c(\"b\",\"b\",\"o\",\"b\",\"o\"),                reference_category = 2)"},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/reference/print.bgmCompare.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for `bgmCompare` objects — print.bgmCompare","title":"Print method for `bgmCompare` objects — print.bgmCompare","text":"Minimal console output `bgmCompare` fit objects.","code":""},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/reference/print.bgmCompare.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for `bgmCompare` objects — print.bgmCompare","text":"","code":"# S3 method for class 'bgmCompare' print(x, ...)"},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/reference/print.bgmCompare.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for `bgmCompare` objects — print.bgmCompare","text":"x object class `bgmCompare`. ... Ignored.","code":""},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/reference/print.bgms.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for `bgms` objects — print.bgms","title":"Print method for `bgms` objects — print.bgms","text":"Minimal console output `bgms` fit objects.","code":""},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/reference/print.bgms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for `bgms` objects — print.bgms","text":"","code":"# S3 method for class 'bgms' print(x, ...)"},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/reference/print.bgms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for `bgms` objects — print.bgms","text":"x object class `bgms`. ... Ignored.","code":""},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/reference/summary.bgmCompare.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary method for `bgmCompare` objects — summary.bgmCompare","title":"Summary method for `bgmCompare` objects — summary.bgmCompare","text":"Returns posterior summaries diagnostics fitted `bgmCompare` model.","code":""},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/reference/summary.bgmCompare.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary method for `bgmCompare` objects — summary.bgmCompare","text":"","code":"# S3 method for class 'bgmCompare' summary(object, ...)"},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/reference/summary.bgmCompare.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary method for `bgmCompare` objects — summary.bgmCompare","text":"object object class `bgmCompare`. ... Currently ignored.","code":""},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/reference/summary.bgmCompare.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary method for `bgmCompare` objects — summary.bgmCompare","text":"object class `summary.bgmCompare` posterior summaries.","code":""},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/reference/summary.bgms.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary method for `bgms` objects — summary.bgms","title":"Summary method for `bgms` objects — summary.bgms","text":"Returns posterior summaries diagnostics fitted `bgms` model.","code":""},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/reference/summary.bgms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary method for `bgms` objects — summary.bgms","text":"","code":"# S3 method for class 'bgms' summary(object, ...)"},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/reference/summary.bgms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary method for `bgms` objects — summary.bgms","text":"object object class `bgms`. ... Currently ignored.","code":""},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/reference/summary.bgms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary method for `bgms` objects — summary.bgms","text":"object class `summary.bgms` posterior summaries.","code":""},{"path":[]},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/news/index.html","id":"new-features-0-1-6-0","dir":"Changelog","previous_headings":"","what":"New features","title":"bgms 0.1.6.0","text":"NUTS HMC options provided sampling bgm bgmCompare model Sampling multiple chains can now done parallel Markov chain diagnostics now offered sampled parameters","code":""},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/news/index.html","id":"other-changes-0-1-6-0","dir":"Changelog","previous_headings":"","what":"Other changes","title":"bgms 0.1.6.0","text":"Improved progress bar parallel sampling User interrupt parallel sampling extensive summary print options provided","code":""},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/news/index.html","id":"bug-fixes-0-1-6-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"bgms 0.1.6.0","text":"Fixed bug bgmCompare function missing data handling Fixed bug SBM prior handling","code":""},{"path":[]},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/news/index.html","id":"new-features-0-1-5-0","dir":"Changelog","previous_headings":"","what":"New features","title":"bgms 0.1.5.0","text":"bgmCompare function now allows network comparison two groups. new summary_sbm function can used summarize output bgm function “Stochastic-Block” prior. Two new data sets included package: ADHD Boredom.","code":""},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/news/index.html","id":"other-changes-0-1-5-0","dir":"Changelog","previous_headings":"","what":"Other changes","title":"bgms 0.1.5.0","text":"bgm function “Stochastic-Block” prior can now also return sampled allocations block probabilities, sample return number blocks. underlying R c++ functions received massive update improve efficiency maintainance. Repository moved Bayesian Graphical Modelling Lab organization. Included custom c++ implementations exp log Windows.","code":""},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/news/index.html","id":"bug-fixes-0-1-5-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"bgms 0.1.5.0","text":"Fixed bug bgmCompare function selecting group differences blume-capel parameters. Parameter differences selected fixed zero still updated. Fixed bug bgmCompare function handling samples blume-capel parameters. Output properly stored. Fixed bug bgmCompare function handling threshold estimation missing categories main_model = “Free”. sufficient statistics number categories computed correctly. Partially fixed bug bgms package slower Windows Linux MacOS. computation exp log using gcc compiler Windows really slow. custom c++ implementation, speed now closer speed achieved Linux MacOS.","code":""},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/news/index.html","id":"bgms-0142","dir":"Changelog","previous_headings":"","what":"bgms 0.1.4.2","title":"bgms 0.1.4.2","text":"CRAN release: 2024-12-05 Fixed bug adjusting variance proposal distributions. Fixed bug recoding data “collapse” condition. selection = true, run 2 * burnin iterations instead 1 * burnin burnin phase. helps ensure Markov chain used estimating pseudoposterior starts good parameter values proposals properly calibrated. rare cases, Markov chain get stuck . default setting burnin also changed 1000 500. Changed maximum standard deviation adaptive proposal 20 back 2.","code":""},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/news/index.html","id":"bgms-0141","dir":"Changelog","previous_headings":"","what":"bgms 0.1.4.1","title":"bgms 0.1.4.1","text":"CRAN release: 2024-11-12 minor release adds documentation output bug fixes.","code":""},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/news/index.html","id":"bgms-014","dir":"Changelog","previous_headings":"","what":"bgms 0.1.4","title":"bgms 0.1.4","text":"CRAN release: 2024-10-20","code":""},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/news/index.html","id":"new-features-0-1-4","dir":"Changelog","previous_headings":"","what":"New features","title":"bgms 0.1.4","text":"Comparing category threshold pairwise interaction parameters two independent samples bgmCompare(). Stochastic Block model new prior option network structure bgm().","code":""},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/news/index.html","id":"other-changes-0-1-4","dir":"Changelog","previous_headings":"","what":"Other changes","title":"bgms 0.1.4","text":"Exported extractor functions extract results bgm objects safe way. Changed maximum standard deviation adaptive proposal 2 20. small bug fixes.","code":""},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/news/index.html","id":"bgms-013","dir":"Changelog","previous_headings":"","what":"bgms 0.1.3","title":"bgms 0.1.3","text":"CRAN release: 2024-02-25","code":""},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/news/index.html","id":"new-features-0-1-3","dir":"Changelog","previous_headings":"","what":"New features","title":"bgms 0.1.3","text":"Added support Bayesian estimation without edge selection bgm(). Added support simulating data (mixed) binary, ordinal, Blume-Capel MRF mrfSampler() Added support analyzing (mixed) binary, ordinal, Blume-Capel variables bgm()","code":""},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/news/index.html","id":"user-level-changes-0-1-3","dir":"Changelog","previous_headings":"","what":"User level changes","title":"bgms 0.1.3","text":"Removed support optimization based functions, mple(), mppe(), bgm.em() Removed support Unit-Information prior bgm() Removed support non-adaptive Metropolis bgm() Reduced file size saving raw MCMC samples","code":""},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/news/index.html","id":"bgms-012","dir":"Changelog","previous_headings":"","what":"bgms 0.1.2","title":"bgms 0.1.2","text":"CRAN release: 2023-10-13 minor release adds bug fixes.","code":""},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/news/index.html","id":"bgms-011","dir":"Changelog","previous_headings":"","what":"bgms 0.1.1","title":"bgms 0.1.1","text":"CRAN release: 2023-09-01 minor release adding new features fixing minor bugs.","code":""},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/news/index.html","id":"new-features-0-1-1","dir":"Changelog","previous_headings":"","what":"New features","title":"bgms 0.1.1","text":"Missing data imputation bgm function. See na.action option. Prior distributions network structure bgm function. See edge_prior option. Adaptive Metropolis alternative current random walk Metropolis algorithm bgm function. See adaptive option.","code":""},{"path":"https://bayesian-graphical-modelling-lab.github.io/bgms/news/index.html","id":"user-level-changes-0-1-1","dir":"Changelog","previous_headings":"","what":"User level changes","title":"bgms 0.1.1","text":"Changed default specification interaction prior UnitInfo Cauchy. See interaction_prior option. Changed default threshold hyperparameter specification 1.0 0.5. See threshold_alpha threshold_beta options. Analysis output now uses column names data.","code":""}]
